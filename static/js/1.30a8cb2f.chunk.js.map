{"version":3,"sources":["libs/territories-ui/Table.js","BoardCell/elements.js","BoardCell/index.js","libs/territories-ui/Rectangle.js","Board/index.js","libs/territories-ui/Dialog.js","libs/territories-ui/DialogActions.js","libs/territories-ui/DialogContent.js","libs/territories-ui/DialogTitle.js","libs/territories-icons/Timer.js","playersNamesContext.js","libs/territories-ui/Avatar.js","Player/elements.js","Player/index.js","Congratulations/elements.js","Congratulations/index.js","libs/react-dice-3d/dice.js","libs/react-dice-3d/index.js","DicesWindow/index.js","libs/territories-icons/Rotate.js","libs/territories-ui/Paper.js","PlayersControls/elements.js","PlayersControls/index.js","UI/elements.js","UI/index.js","libs/territories-ui/CardHeader.js","libs/territories-ui/Card.js","libs/territories-ui/CardContent.js","images/congratulations.gif"],"names":["styled","div","props","theme","colors","gray","Row","Cell","cellRadius","OccupiedCell","type","player1","player2","Overlay","GreenOverlay","green","RedOverlay","red","YellowOverlay","yellow","BoardCell","state","touchX","touchY","touchDraggedColumnIndex","touchDraggedRowIndex","handleCellMouseEnter","rowIndex","columnIndex","onMouseEnter","handleCellClick","onClick","handleCellTouchStart","touches","length","setState","clientX","clientY","handleCellTouchMove","cellDiameter","differenceX","Math","floor","differenceY","abs","boardWidth","boardHeight","newColumnIndex","newRowIndex","handleCellTouchEnd","event","preventDefault","this","canDrop","value","selectedRowIndex","selectedColumnIndex","rectangleWidth","rectangleHeight","potentiallyOccupiedCells","isCellInRectangle","GameUtils","isPotentiallyOccupied","some","cell","onTouchStart","onTouchMove","onTouchEnd","Component","Rectangle","renderRow","rows","row","rowRenderer","rowClassName","rowStyle","cellRenderer","cellClassName","cellStyle","key","className","style","map","renderCell","rest","Array","isArray","Error","Table","Board","currentPlayer","disabled","handleBoardMouseLeave","handleDropRectangle","onDropRectangle","prevProps","onMouseLeave","Dialog","DialogActions","DialogContent","DialogTitle","Timer","React","createContext","Avatar","DetachedCard","Card","StyledAvatar","isPlayer1","player","CenteredCardContent","CardContent","Player","isCurrent","allCellsCount","playerCellsCount","readOnly","onSkipTurn","Consumer","playersNames","playerName","CardHeader","avatar","charAt","title","subheader","Number","isInteger","intl","get","Tooltip","IconButton","CenteredImage","img","Congratulations","open","handleOpen","handleClose","handleGoHome","window","process","gameover","fullWidth","onClose","winner","src","congratulationsImage","alt","Button","variant","color","DiceManagerClass","world","diceBodyMaterial","CANNON","floorBodyMaterial","barrierBodyMaterial","addContactMaterial","friction","restitution","diceValues","i","dice","values","simulationRunning","vectors","getCurrentVectors","stableCount","addEventListener","check","allStable","isFinished","console","log","DiceManager","removeEventListener","shiftUpperValue","setVectors","step","dt","DiceObject","options","setDefaults","size","fontColor","backColor","object","invertUpside","materialOptions","specular","shininess","flatShading","THREE","labelColor","diceColor","defaults","hasOwnProperty","callback","getUpsideValue","angularVelocity","body","velocity","x","y","z","closest_face","vector","closest_angle","PI","geometry","faces","face","materialIndex","angle","normal","clone","applyQuaternion","quaternion","angleTo","position","toValue","fromValue","l","chamfer","chamfer_vectors","chamfer_faces","corner_faces","ii","fl","center_point","j","vv","add","push","divideScalar","subVectors","multiplyScalar","addVectors","pairs","lastm","m","n","indexOf","unshift","cf","count","index","next_vertex","vertices","radius","tab","af","geom","vertex","aa","faceVertexUvs","cos","sin","computeFaceNormals","boundingSphere","cv","v","slice","scaleFactor","fromArray","normalize","chamferGeometry","getChamferGeometry","makeGeometry","cannon_shape","createShape","approx","max","pow","text","canvas","document","createElement","context","getContext","ts","calculateTextureSize","textMargin","width","height","font","fillStyle","fillRect","textAlign","textBaseline","fillText","texture","needsUpdate","materials","faceTexts","customTextTextureFunction","createTextTexture","Object","assign","getGeometry","getMaterials","reveiceShadow","castShadow","diceObject","mass","shape","material","linearDamping","angularDamping","copy","DiceD4","translate","rotate","inertia","create","DiceD6","DiceD8","DiceD10","b","DiceD12","p","sqrt","q","DiceD20","t","DICE_TYPES","Dices3d","generateDiceModels","dices","diceSize","prepareDicesValues","diceModels","diceModel","getObject","random","updateBodyFromMesh","yRand","rand","set","prepareValues","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","updatePhysics","renderScene","controls","update","forEach","updateMeshFromBody","renderer","render","scene","camera","background","mount","clientWidth","clientHeight","ratio","antialias","setSize","shadowMap","enabled","appendChild","domElement","OrbitControls","ambient","directionalLight","light","target","shadow","near","far","mapSize","gravity","broadphase","solver","iterations","setWorld","floorBody","setFromAxisAngle","removeChild","ref","DicesWindow","rollingDices","setTimeout","onFinishRoll","Rotate","Paper","FixedSizePaper","FullHeightContainer","Container","PlayersControls","occupiedCounters","onStartRollDices","onFinishRollDices","onRotateRectangle","center","column","alignItems","fill","DetachedItem","Item","UI","isLoadingNames","PLAYER_1","PLAYER_2","handleStartRollDices","moves","startRollDices","handleFinishRollDices","isMultiplayer","playerID","ctx","finishRollDices","handleRotateRectangle","switchDices","dropRectangle","handleEndTurn","clearDices","events","endTurn","ai","gameID","name","axios","then","response","gameInstance","data","gameInstances","find","players","reduce","id","finally","G","board","turn","result","guessCellToDropRectangle","emptyCellsCount","isActive","LinearProgress","Provider","selectGameover","module","exports"],"mappings":"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","file":"static/js/1.30a8cb2f.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst DEFAULT_BORDER = 1;\nconst DEFAULT_CELL_RADIUS = 10;\n\nexport default styled.div`\n  display: table;\n  border: ${DEFAULT_BORDER}px solid ${props => props.theme.colors.gray};\n`;\n\nexport const Row = styled.div`\n  display: table-row;\n`;\n\nexport const Cell = styled.div`\n  display: table-cell;\n  padding: ${props =>\n    props.cellRadius\n      ? props.cellRadius - DEFAULT_BORDER\n      : DEFAULT_CELL_RADIUS}px;\n  border: ${DEFAULT_BORDER}px solid ${props => props.theme.colors.gray};\n`;\n","import styled from \"styled-components\";\nimport { Cell } from \"../libs/territories-ui/Table\";\n\nexport const TYPE_PLAYER_1 = \"PLAYER_1\";\nexport const TYPE_PLAYER_2 = \"PLAYER_2\";\nexport const TYPE_EMPTY = \"EMPTY\";\n\nexport const OccupiedCell = styled(Cell)`\n  position: relative;\n  background-color: ${props =>\n    props.type === TYPE_PLAYER_1\n      ? props.theme.colors.player1\n      : props.type === TYPE_PLAYER_2\n      ? props.theme.colors.player2\n      : \"inherit\"};\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  z-index: 1;\n  opacity: 0.5;\n`;\n\nexport const GreenOverlay = styled(Overlay)`\n  background-color: ${props => props.theme.colors.green};\n`;\n\nexport const RedOverlay = styled(Overlay)`\n  background-color: ${props => props.theme.colors.red};\n`;\n\nexport const YellowOverlay = styled(Overlay)`\n  background-color: ${props => props.theme.colors.yellow};\n`;\n","import React, { Component } from \"react\";\nimport * as GameUtils from \"territories-core\";\n\nimport {\n  OccupiedCell,\n  GreenOverlay,\n  YellowOverlay,\n  RedOverlay,\n  TYPE_EMPTY,\n  TYPE_PLAYER_1,\n  TYPE_PLAYER_2\n} from \"./elements\";\n\nclass BoardCell extends Component {\n  state = {\n    touchX: -1,\n    touchY: -1,\n    touchDraggedColumnIndex: -1,\n    touchDraggedRowIndex: -1\n  };\n\n  handleCellMouseEnter = () => {\n    const { rowIndex, columnIndex, onMouseEnter } = this.props;\n\n    onMouseEnter({ rowIndex, columnIndex });\n  };\n\n  handleCellClick = () => {\n    const { rowIndex, columnIndex, onClick } = this.props;\n\n    onClick({ rowIndex, columnIndex });\n  };\n\n  handleCellTouchStart = ({ touches }) => {\n    if (touches.length === 1) {\n      this.setState({\n        touchX: touches[0].clientX,\n        touchY: touches[0].clientY\n      });\n    }\n    this.handleCellMouseEnter();\n  };\n\n  handleCellTouchMove = ({ touches }) => {\n    // Skip double touches\n    if (touches.length < 1) {\n      return;\n    }\n\n    // Skip touch move without touch start (probably impossible scenario)\n    const { touchX, touchY } = this.state;\n    if (touchX === -1 || touchY === -1) {\n      return;\n    }\n\n    const { clientX, clientY } = touches[0];\n    const { cellRadius } = this.props;\n    const cellDiameter = cellRadius * 2;\n\n    const differenceX = Math.floor((touchX - clientX) / cellDiameter);\n    const differenceY = Math.floor((touchY - clientY) / cellDiameter);\n\n    // Skip touch move near the same cell\n    if (Math.abs(differenceX) === 0 && Math.abs(differenceY) === 0) {\n      return;\n    }\n\n    const {\n      columnIndex,\n      rowIndex,\n      boardWidth,\n      boardHeight,\n      onMouseEnter\n    } = this.props;\n    const newColumnIndex = columnIndex - differenceX;\n    const newRowIndex = rowIndex - differenceY;\n\n    // Skip too far touch move\n    if (\n      newColumnIndex < 0 ||\n      newColumnIndex >= boardWidth ||\n      newRowIndex < 0 ||\n      newRowIndex >= boardHeight\n    ) {\n      return;\n    }\n\n    this.setState({\n      touchDraggedColumnIndex: newColumnIndex,\n      touchDraggedRowIndex: newRowIndex\n    });\n    onMouseEnter({\n      columnIndex: newColumnIndex,\n      rowIndex: newRowIndex\n    });\n  };\n\n  handleCellTouchEnd = event => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const { touchDraggedColumnIndex, touchDraggedRowIndex } = this.state;\n    const { onClick } = this.props;\n\n    if (touchDraggedColumnIndex !== -1 || touchDraggedRowIndex !== -1) {\n      onClick({\n        rowIndex: touchDraggedRowIndex,\n        columnIndex: touchDraggedColumnIndex\n      });\n    }\n  };\n\n  render() {\n    const {\n      canDrop,\n      value,\n      rowIndex,\n      columnIndex,\n      cellRadius,\n      selectedRowIndex,\n      selectedColumnIndex,\n      rectangleWidth,\n      rectangleHeight,\n      potentiallyOccupiedCells\n    } = this.props;\n\n    const isCellInRectangle = GameUtils.inRectangle({\n      rowIndex,\n      columnIndex,\n      selectedRowIndex,\n      selectedColumnIndex,\n      rectangleWidth,\n      rectangleHeight\n    });\n\n    let isPotentiallyOccupied = false;\n    if (!isCellInRectangle) {\n      isPotentiallyOccupied = potentiallyOccupiedCells.some(cell =>\n        GameUtils.inRectangle({\n          rowIndex,\n          columnIndex,\n          selectedRowIndex: cell.rowIndex,\n          selectedColumnIndex: cell.columnIndex,\n          rectangleWidth,\n          rectangleHeight\n        })\n      );\n    }\n\n    return (\n      <OccupiedCell\n        cellRadius={cellRadius}\n        type={\n          GameUtils.isOccupiedByPlayerOneCell(value)\n            ? TYPE_PLAYER_1\n            : GameUtils.isOccupiedByPlayerTwoCell(value)\n            ? TYPE_PLAYER_2\n            : TYPE_EMPTY\n        }\n        onMouseEnter={this.handleCellMouseEnter}\n        onClick={this.handleCellClick}\n        onTouchStart={this.handleCellTouchStart}\n        onTouchMove={this.handleCellTouchMove}\n        onTouchEnd={this.handleCellTouchEnd}\n      >\n        {isCellInRectangle && (canDrop ? <GreenOverlay /> : <RedOverlay />)}\n        {GameUtils.isEmptyCell(value) && isPotentiallyOccupied && (\n          <YellowOverlay />\n        )}\n      </OccupiedCell>\n    );\n  }\n}\n\nexport default BoardCell;\n","import React, { Component } from \"react\";\n\nimport Table, { Cell, Row } from \"./Table\";\n\nclass Rectangle extends Component {\n  renderRow = ({\n    rows,\n    row,\n    rowIndex,\n    rowRenderer,\n    rowClassName,\n    rowStyle,\n    cellRenderer,\n    cellRadius,\n    cellClassName,\n    cellStyle\n  }) => {\n    return rowRenderer ? (\n      rowRenderer({\n        rows,\n        value: row,\n        rowIndex,\n        rowClassName,\n        rowStyle,\n        cellRenderer,\n        cellRadius,\n        cellClassName,\n        cellStyle\n      })\n    ) : (\n      <Row\n        key={`rectangle-row-${rowIndex}`}\n        className={rowClassName}\n        style={rowStyle}\n      >\n        {row.map((cell, columnIndex) =>\n          this.renderCell({\n            rows,\n            row,\n            rowIndex,\n            columnIndex,\n            cell,\n            cellRenderer,\n            cellRadius,\n            cellClassName,\n            cellStyle\n          })\n        )}\n      </Row>\n    );\n  };\n\n  renderCell = ({\n    rows,\n    row,\n    rowIndex,\n    columnIndex,\n    cell,\n    cellRenderer,\n    cellRadius,\n    cellClassName,\n    cellStyle\n  }) => {\n    return cellRenderer ? (\n      cellRenderer({\n        rows,\n        row,\n        rowIndex,\n        columnIndex,\n        value: cell,\n        cellRadius,\n        cellClassName,\n        cellStyle\n      })\n    ) : (\n      <Cell\n        key={`rectangle-cell-${columnIndex}`}\n        className={cellClassName}\n        style={cellStyle}\n        cellRadius={cellRadius}\n      />\n    );\n  };\n\n  render() {\n    const {\n      rows,\n      rowClassName,\n      rowStyle,\n      cellClassName,\n      cellStyle,\n      cellRadius,\n      rowRenderer,\n      cellRenderer,\n      ...rest\n    } = this.props;\n    if (!Array.isArray(rows)) {\n      throw new Error(\n        \"'rows' is a required argument in format [[ 0, 1 ], [0, 'any']]\"\n      );\n    }\n    return (\n      <Table {...rest}>\n        {rows.map((row, rowIndex) =>\n          this.renderRow({\n            rows,\n            row,\n            rowIndex,\n            rowRenderer,\n            rowClassName,\n            rowStyle,\n            cellRenderer,\n            cellRadius,\n            cellClassName,\n            cellStyle\n          })\n        )}\n      </Table>\n    );\n  }\n}\n\nexport default Rectangle;\n","import React, { Component } from \"react\";\nimport * as GameUtils from \"territories-core\";\n\nimport BoardCell from \"../BoardCell\";\nimport Rectangle from \"../libs/territories-ui/Rectangle\";\n\nclass Board extends Component {\n  state = {\n    selectedRowIndex: -1,\n    selectedColumnIndex: -1,\n    canDrop: false,\n    potentiallyOccupiedCells: []\n  };\n\n  componentDidUpdate(prevProps) {\n    const { currentPlayer, rectangleHeight, rectangleWidth, rows } = this.props;\n    if (\n      prevProps.rectangleHeight !== rectangleHeight ||\n      prevProps.rectangleWidth !== rectangleWidth ||\n      prevProps.currentPlayer !== currentPlayer\n    ) {\n      const potentiallyOccupiedCells = GameUtils.findPotentiallyOccupiedRectangles(\n        {\n          currentPlayer,\n          rectangleHeight,\n          rectangleWidth,\n          rows\n        }\n      );\n      this.setState({ potentiallyOccupiedCells });\n    }\n  }\n\n  handleCellMouseEnter = ({ rowIndex, columnIndex }) => {\n    const {\n      rows,\n      rectangleHeight,\n      rectangleWidth,\n      currentPlayer,\n      disabled\n    } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    const canDrop = GameUtils.canDropRectangle({\n      rowIndex,\n      columnIndex,\n      value: rows[rowIndex][columnIndex],\n      rows,\n      rectangleHeight,\n      rectangleWidth,\n      currentPlayer\n    });\n    this.setState({\n      selectedRowIndex: rowIndex,\n      selectedColumnIndex: columnIndex,\n      canDrop\n    });\n  };\n\n  handleBoardMouseLeave = () => {\n    this.setState({ selectedRowIndex: -1, selectedColumnIndex: -1 });\n  };\n\n  handleDropRectangle = ({ rowIndex, columnIndex }) => {\n    const { disabled } = this.props;\n    const { canDrop } = this.state;\n    const { onDropRectangle, rectangleHeight, rectangleWidth } = this.props;\n\n    if (!disabled && canDrop) {\n      onDropRectangle({\n        rowIndex,\n        columnIndex,\n        rectangleHeight,\n        rectangleWidth\n      });\n    }\n\n    this.handleBoardMouseLeave();\n  };\n\n  render() {\n    const { rows, cellRadius, rectangleWidth, rectangleHeight } = this.props;\n    const {\n      selectedRowIndex,\n      selectedColumnIndex,\n      canDrop,\n      potentiallyOccupiedCells\n    } = this.state;\n    return (\n      <Rectangle\n        rows={rows}\n        cellRenderer={({ value, rowIndex, columnIndex }) => (\n          <BoardCell\n            key={`board-${rowIndex}-${columnIndex}`}\n            canDrop={canDrop}\n            value={value}\n            rowIndex={rowIndex}\n            columnIndex={columnIndex}\n            selectedRowIndex={selectedRowIndex}\n            selectedColumnIndex={selectedColumnIndex}\n            rectangleHeight={rectangleHeight}\n            rectangleWidth={rectangleWidth}\n            cellRadius={cellRadius}\n            potentiallyOccupiedCells={potentiallyOccupiedCells}\n            boardHeight={rows.length}\n            boardWidth={rows.length > 0 ? rows[0].length : 0}\n            onMouseEnter={this.handleCellMouseEnter}\n            onClick={this.handleDropRectangle}\n          />\n        )}\n        onMouseLeave={this.handleBoardMouseLeave}\n      />\n    );\n  }\n}\n\nexport default Board;\n","import Dialog from \"@material-ui/core/Dialog\";\n\nexport default Dialog;\n\n// import React from \"react\";\n// import styled from \"styled-components\";\n\n// const Modal = styled.div`\n//   display: ${props => (props.open ? \"block\" : \"none\")};\n//   position: fixed;\n//   z-index: 1;\n//   left: 0;\n//   top: 0;\n//   width: 100%;\n//   height: 100%;\n//   overflow: auto;\n//   background-color: rgb(0, 0, 0);\n//   background-color: rgba(0, 0, 0, 0.4);\n// `;\n\n// const ModalContent = styled.div`\n//   background-color: #fefefe;\n//   margin: 15% auto;\n//   padding: 20px;\n//   border: 1px solid #888;\n//   width: 50%;\n// `;\n\n// // TODO implement better dialog or use existing library\n// const Dialog = ({ open, children }) => (\n//   <Modal open={open}>\n//     <ModalContent>{children}</ModalContent>\n//   </Modal>\n// );\n\n// export default Dialog;\n","import DialogActions from \"@material-ui/core/DialogActions\";\n\nexport default DialogActions;\n","import DialogContent from \"@material-ui/core/DialogContent\";\n\nexport default DialogContent;\n","import DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default DialogTitle;\n","import Timer from \"@material-ui/icons/Timer\";\n\nexport default Timer;\n","import React from \"react\";\n\n// TODO implement playerName in a better way\nexport default React.createContext(\"players-names\");\n","import Avatar from \"@material-ui/core/Avatar\";\n\nexport default Avatar;\n","import styled from \"styled-components\";\nimport { isPlayer1 } from \"territories-core\";\n\nimport Avatar from \"../libs/territories-ui/Avatar\";\nimport Card from \"../libs/territories-ui/Card\";\nimport CardContent from \"../libs/territories-ui/CardContent\";\n\nexport const DetachedCard = styled(Card)`\n  && {\n    margin-right: 8px;\n    margin-left: 8px;\n  }\n`;\n\nexport const StyledAvatar = styled(Avatar)`\n  && {\n    background-color: ${props =>\n      isPlayer1(props.player)\n        ? props.theme.colors.player1\n        : props.theme.colors.player2};\n  }\n`;\n\nexport const CenteredCardContent = styled(CardContent)`\n  && {\n    text-align: center;\n  }\n`;\n","import React from \"react\";\nimport intl from \"react-intl-universal\";\n\nimport CardHeader from \"../libs/territories-ui/CardHeader\";\nimport IconButton from \"../libs/territories-ui/IconButton\";\nimport TimerIcon from \"../libs/territories-icons/Timer\";\nimport Tooltip from \"../libs/territories-ui/Tooltip\";\nimport PlayersNamesContext from \"../playersNamesContext\";\nimport { CenteredCardContent, DetachedCard, StyledAvatar } from \"./elements\";\n\nconst Player = ({\n  isCurrent,\n  player,\n  allCellsCount,\n  playerCellsCount,\n  readOnly,\n  onSkipTurn\n}) => (\n  <PlayersNamesContext.Consumer>\n    {playersNames => {\n      const playerName = player && playersNames[player];\n      return (\n        <DetachedCard>\n          <CardHeader\n            avatar={\n              <StyledAvatar player={player}>\n                {playerName && playerName.charAt(0)}\n              </StyledAvatar>\n            }\n            title={playerName}\n            subheader={\n              Number.isInteger(playerCellsCount) &&\n              Number.isInteger(allCellsCount) &&\n              intl.get(\"player_controls.player_stats\", {\n                playerCellsCount,\n                allCellsCount\n              })\n            }\n          />\n          {isCurrent && (\n            <CenteredCardContent>\n              <Tooltip title={intl.get(\"player_controls.skip_turn\")}>\n                <IconButton disabled={readOnly} onClick={onSkipTurn}>\n                  <TimerIcon />\n                </IconButton>\n              </Tooltip>\n            </CenteredCardContent>\n          )}\n        </DetachedCard>\n      );\n    }}\n  </PlayersNamesContext.Consumer>\n);\n\nexport default Player;\n","import styled from \"styled-components\";\n\nexport const CenteredImage = styled.img`\n  display: block;\n  margin: 10px auto;\n  width: 20%;\n`;\n","import React, { Component } from \"react\";\nimport intl from \"react-intl-universal\";\n\nimport Button from \"../libs/territories-ui/Button\";\nimport Dialog from \"../libs/territories-ui/Dialog\";\nimport DialogActions from \"../libs/territories-ui/DialogActions\";\nimport DialogContent from \"../libs/territories-ui/DialogContent\";\nimport DialogTitle from \"../libs/territories-ui/DialogTitle\";\nimport Player from \"../Player\";\nimport congratulationsImage from \"../images/congratulations.gif\";\nimport { CenteredImage } from \"./elements\";\n\n// TODO win is not shown for player 2\nclass Congratulations extends Component {\n  state = {\n    open: false\n  };\n\n  componentDidMount() {\n    if (this.props.gameover) {\n      this.handleOpen();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.gameover && prevProps.gameover !== this.props.gameover) {\n      this.handleOpen();\n    }\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleGoHome = () => {\n    window.open(`${process.env.PUBLIC_URL}/`, \"_self\");\n  };\n\n  render() {\n    const { open } = this.state;\n    const { gameover } = this.props;\n\n    return (\n      <Dialog open={open} fullWidth onClose={this.handleClose}>\n        {gameover && (\n          <DialogTitle>\n            {gameover.winner\n              ? intl.get(\"congratulations.winner\")\n              : intl.get(\"congratulations.draw\")}\n          </DialogTitle>\n        )}\n        {gameover && (\n          <DialogContent>\n            {gameover.winner && <Player player={gameover.winner} />}\n            <CenteredImage\n              src={congratulationsImage}\n              alt={intl.get(\"congratulations.image\")}\n            />\n          </DialogContent>\n        )}\n        <DialogActions>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleClose}\n          >\n            {intl.get(\"congratulations.ok\")}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default Congratulations;\n","import * as CANNON from \"cannon\";\nimport * as THREE from \"three\";\n\nclass DiceManagerClass {\n  constructor() {\n    this.world = null;\n  }\n\n  setWorld(world) {\n    this.world = world;\n\n    this.diceBodyMaterial = new CANNON.Material();\n    this.floorBodyMaterial = new CANNON.Material();\n    this.barrierBodyMaterial = new CANNON.Material();\n\n    world.addContactMaterial(\n      new CANNON.ContactMaterial(\n        this.floorBodyMaterial,\n        this.diceBodyMaterial,\n        { friction: 0.01, restitution: 0.5 }\n      )\n    );\n    world.addContactMaterial(\n      new CANNON.ContactMaterial(\n        this.barrierBodyMaterial,\n        this.diceBodyMaterial,\n        { friction: 0, restitution: 1.0 }\n      )\n    );\n    world.addContactMaterial(\n      new CANNON.ContactMaterial(this.diceBodyMaterial, this.diceBodyMaterial, {\n        friction: 0,\n        restitution: 0.5\n      })\n    );\n  }\n\n  /**\n   *\n   * @param {array} diceValues\n   * @param {DiceObject} [diceValues.dice]\n   * @param {number} [diceValues.value]\n   *\n   */\n  prepareValues(diceValues) {\n    for (let i = 0; i < diceValues.length; i++) {\n      if (\n        diceValues[i].value < 1 ||\n        diceValues[i].dice.values < diceValues[i].value\n      ) {\n        throw new Error(\n          \"Cannot throw die to value \" +\n            diceValues[i].value +\n            \", because it has only \" +\n            diceValues[i].dice.values +\n            \" sides.\"\n        );\n      }\n    }\n\n    for (let i = 0; i < diceValues.length; i++) {\n      diceValues[i].dice.simulationRunning = true;\n      diceValues[i].vectors = diceValues[i].dice.getCurrentVectors();\n      diceValues[i].stableCount = 0;\n    }\n\n    let check = () => {\n      let allStable = true;\n      for (let i = 0; i < diceValues.length; i++) {\n        if (diceValues[i].dice.isFinished()) {\n          diceValues[i].stableCount++;\n        } else {\n          diceValues[i].stableCount = 0;\n        }\n\n        if (diceValues[i].stableCount < 50) {\n          allStable = false;\n        }\n      }\n\n      if (allStable) {\n        console.log(\"all stable\");\n        DiceManager.world.removeEventListener(\"postStep\", check);\n\n        for (let i = 0; i < diceValues.length; i++) {\n          diceValues[i].dice.shiftUpperValue(diceValues[i].value);\n          diceValues[i].dice.setVectors(diceValues[i].vectors);\n          diceValues[i].dice.simulationRunning = false;\n        }\n      } else {\n        DiceManager.world.step(DiceManager.world.dt);\n      }\n    };\n\n    this.world.addEventListener(\"postStep\", check);\n  }\n}\n\nexport class DiceObject {\n  /**\n   * @constructor\n   * @param {object} options\n   * @param {Number} [options.size = 100]\n   * @param {Number} [options.fontColor = '#000000']\n   * @param {Number} [options.backColor = '#ffffff']\n   */\n  constructor(options) {\n    options = this.setDefaults(options, {\n      size: 100,\n      fontColor: \"#000000\",\n      backColor: \"#ffffff\"\n    });\n\n    this.object = null;\n    this.size = options.size;\n    this.invertUpside = false;\n\n    this.materialOptions = {\n      specular: 0x172022,\n      color: 0xf0f0f0,\n      shininess: 40,\n      flatShading: THREE.FlatShading\n    };\n    this.labelColor = options.fontColor;\n    this.diceColor = options.backColor;\n  }\n\n  setDefaults(options, defaults) {\n    options = options || {};\n\n    for (let key in defaults) {\n      if (!defaults.hasOwnProperty(key)) continue;\n\n      if (!(key in options)) {\n        options[key] = defaults[key];\n      }\n    }\n\n    return options;\n  }\n\n  emulateThrow(callback) {\n    let stableCount = 0;\n\n    let check = () => {\n      if (this.isFinished()) {\n        stableCount++;\n\n        if (stableCount === 50) {\n          DiceManager.world.removeEventListener(\"postStep\", check);\n          callback(this.getUpsideValue());\n        }\n      } else {\n        stableCount = 0;\n      }\n\n      DiceManager.world.step(DiceManager.world.dt);\n    };\n\n    DiceManager.world.addEventListener(\"postStep\", check);\n  }\n\n  isFinished() {\n    let threshold = 1;\n\n    let angularVelocity = this.object.body.angularVelocity;\n    let velocity = this.object.body.velocity;\n\n    return (\n      Math.abs(angularVelocity.x) < threshold &&\n      Math.abs(angularVelocity.y) < threshold &&\n      Math.abs(angularVelocity.z) < threshold &&\n      Math.abs(velocity.x) < threshold &&\n      Math.abs(velocity.y) < threshold &&\n      Math.abs(velocity.z) < threshold\n    );\n  }\n\n  getUpsideValue() {\n    let vector = new THREE.Vector3(0, this.invertUpside ? -1 : 1);\n    let closest_face;\n    let closest_angle = Math.PI * 2;\n    for (let i = 0; i < this.object.geometry.faces.length; ++i) {\n      let face = this.object.geometry.faces[i];\n      if (face.materialIndex === 0) continue;\n\n      let angle = face.normal\n        .clone()\n        .applyQuaternion(this.object.body.quaternion)\n        .angleTo(vector);\n      if (angle < closest_angle) {\n        closest_angle = angle;\n        closest_face = face;\n      }\n    }\n\n    return closest_face.materialIndex - 1;\n  }\n\n  getCurrentVectors() {\n    return {\n      position: this.object.body.position.clone(),\n      quaternion: this.object.body.quaternion.clone(),\n      velocity: this.object.body.velocity.clone(),\n      angularVelocity: this.object.body.angularVelocity.clone()\n    };\n  }\n\n  setVectors(vectors) {\n    this.object.body.position = vectors.position;\n    this.object.body.quaternion = vectors.quaternion;\n    this.object.body.velocity = vectors.velocity;\n    this.object.body.angularVelocity = vectors.angularVelocity;\n  }\n\n  shiftUpperValue(toValue) {\n    let geometry = this.object.geometry.clone();\n\n    let fromValue = this.getUpsideValue();\n\n    for (let i = 0, l = geometry.faces.length; i < l; ++i) {\n      let materialIndex = geometry.faces[i].materialIndex;\n      if (materialIndex === 0) continue;\n\n      materialIndex += toValue - fromValue - 1;\n      while (materialIndex > this.values) materialIndex -= this.values;\n      while (materialIndex < 1) materialIndex += this.values;\n\n      geometry.faces[i].materialIndex = materialIndex + 1;\n    }\n\n    this.object.geometry = geometry;\n  }\n\n  getChamferGeometry(vectors, faces, chamfer) {\n    let chamfer_vectors = [],\n      chamfer_faces = [],\n      corner_faces = new Array(vectors.length);\n    for (let i = 0; i < vectors.length; ++i) corner_faces[i] = [];\n    for (let i = 0; i < faces.length; ++i) {\n      let ii = faces[i],\n        fl = ii.length - 1;\n      let center_point = new THREE.Vector3();\n      let face = new Array(fl);\n      for (let j = 0; j < fl; ++j) {\n        let vv = vectors[ii[j]].clone();\n        center_point.add(vv);\n        corner_faces[ii[j]].push((face[j] = chamfer_vectors.push(vv) - 1));\n      }\n      center_point.divideScalar(fl);\n      for (let j = 0; j < fl; ++j) {\n        let vv = chamfer_vectors[face[j]];\n        vv.subVectors(vv, center_point)\n          .multiplyScalar(chamfer)\n          .addVectors(vv, center_point);\n      }\n      face.push(ii[fl]);\n      chamfer_faces.push(face);\n    }\n    for (let i = 0; i < faces.length - 1; ++i) {\n      for (let j = i + 1; j < faces.length; ++j) {\n        let pairs = [],\n          lastm = -1;\n        for (let m = 0; m < faces[i].length - 1; ++m) {\n          let n = faces[j].indexOf(faces[i][m]);\n          if (n >= 0 && n < faces[j].length - 1) {\n            if (lastm >= 0 && m !== lastm + 1) pairs.unshift([i, m], [j, n]);\n            else pairs.push([i, m], [j, n]);\n            lastm = m;\n          }\n        }\n        if (pairs.length !== 4) continue;\n        chamfer_faces.push([\n          chamfer_faces[pairs[0][0]][pairs[0][1]],\n          chamfer_faces[pairs[1][0]][pairs[1][1]],\n          chamfer_faces[pairs[3][0]][pairs[3][1]],\n          chamfer_faces[pairs[2][0]][pairs[2][1]],\n          -1\n        ]);\n      }\n    }\n    for (let i = 0; i < corner_faces.length; ++i) {\n      let cf = corner_faces[i],\n        face = [cf[0]],\n        count = cf.length - 1;\n      while (count) {\n        for (let m = faces.length; m < chamfer_faces.length; ++m) {\n          let index = chamfer_faces[m].indexOf(face[face.length - 1]);\n          if (index >= 0 && index < 4) {\n            if (--index === -1) index = 3;\n            let next_vertex = chamfer_faces[m][index];\n            if (cf.indexOf(next_vertex) >= 0) {\n              face.push(next_vertex);\n              break;\n            }\n          }\n        }\n        --count;\n      }\n      face.push(-1);\n      chamfer_faces.push(face);\n    }\n    return { vectors: chamfer_vectors, faces: chamfer_faces };\n  }\n\n  makeGeometry(vertices, faces, radius, tab, af) {\n    let geom = new THREE.Geometry();\n    for (let i = 0; i < vertices.length; ++i) {\n      let vertex = vertices[i].multiplyScalar(radius);\n      vertex.index = geom.vertices.push(vertex) - 1;\n    }\n    for (let i = 0; i < faces.length; ++i) {\n      let ii = faces[i],\n        fl = ii.length - 1;\n      let aa = (Math.PI * 2) / fl;\n      for (let j = 0; j < fl - 2; ++j) {\n        geom.faces.push(\n          new THREE.Face3(\n            ii[0],\n            ii[j + 1],\n            ii[j + 2],\n            [\n              geom.vertices[ii[0]],\n              geom.vertices[ii[j + 1]],\n              geom.vertices[ii[j + 2]]\n            ],\n            0,\n            ii[fl] + 1\n          )\n        );\n        geom.faceVertexUvs[0].push([\n          new THREE.Vector2(\n            (Math.cos(af) + 1 + tab) / 2 / (1 + tab),\n            (Math.sin(af) + 1 + tab) / 2 / (1 + tab)\n          ),\n          new THREE.Vector2(\n            (Math.cos(aa * (j + 1) + af) + 1 + tab) / 2 / (1 + tab),\n            (Math.sin(aa * (j + 1) + af) + 1 + tab) / 2 / (1 + tab)\n          ),\n          new THREE.Vector2(\n            (Math.cos(aa * (j + 2) + af) + 1 + tab) / 2 / (1 + tab),\n            (Math.sin(aa * (j + 2) + af) + 1 + tab) / 2 / (1 + tab)\n          )\n        ]);\n      }\n    }\n    geom.computeFaceNormals();\n    geom.boundingSphere = new THREE.Sphere(new THREE.Vector3(), radius);\n    return geom;\n  }\n\n  createShape(vertices, faces, radius) {\n    let cv = new Array(vertices.length),\n      cf = new Array(faces.length);\n    for (let i = 0; i < vertices.length; ++i) {\n      let v = vertices[i];\n      cv[i] = new CANNON.Vec3(v.x * radius, v.y * radius, v.z * radius);\n    }\n    for (let i = 0; i < faces.length; ++i) {\n      cf[i] = faces[i].slice(0, faces[i].length - 1);\n    }\n    return new CANNON.ConvexPolyhedron(cv, cf);\n  }\n\n  getGeometry() {\n    let radius = this.size * this.scaleFactor;\n\n    let vectors = new Array(this.vertices.length);\n    for (let i = 0; i < this.vertices.length; ++i) {\n      vectors[i] = new THREE.Vector3().fromArray(this.vertices[i]).normalize();\n    }\n\n    let chamferGeometry = this.getChamferGeometry(\n      vectors,\n      this.faces,\n      this.chamfer\n    );\n    let geometry = this.makeGeometry(\n      chamferGeometry.vectors,\n      chamferGeometry.faces,\n      radius,\n      this.tab,\n      this.af\n    );\n    geometry.cannon_shape = this.createShape(vectors, this.faces, radius);\n\n    return geometry;\n  }\n\n  calculateTextureSize(approx) {\n    return Math.max(\n      128,\n      Math.pow(2, Math.floor(Math.log(approx) / Math.log(2)))\n    );\n  }\n\n  createTextTexture(text, color, backColor) {\n    let canvas = document.createElement(\"canvas\");\n    let context = canvas.getContext(\"2d\");\n    let ts =\n      this.calculateTextureSize(this.size / 2 + this.size * this.textMargin) *\n      2;\n    canvas.width = canvas.height = ts;\n    context.font = ts / (1 + 2 * this.textMargin) + \"pt Arial\";\n    context.fillStyle = backColor;\n    context.fillRect(0, 0, canvas.width, canvas.height);\n    context.textAlign = \"center\";\n    context.textBaseline = \"middle\";\n    context.fillStyle = color;\n    context.fillText(text, canvas.width / 2, canvas.height / 2);\n    let texture = new THREE.Texture(canvas);\n    texture.needsUpdate = true;\n    return texture;\n  }\n\n  getMaterials() {\n    let materials = [];\n    for (let i = 0; i < this.faceTexts.length; ++i) {\n      let texture = null;\n      if (this.customTextTextureFunction) {\n        texture = this.customTextTextureFunction(\n          this.faceTexts[i],\n          this.labelColor,\n          this.diceColor\n        );\n      } else {\n        texture = this.createTextTexture(\n          this.faceTexts[i],\n          this.labelColor,\n          this.diceColor\n        );\n      }\n\n      materials.push(\n        new THREE.MeshPhongMaterial(\n          Object.assign({}, this.materialOptions, { map: texture })\n        )\n      );\n    }\n    return materials;\n  }\n\n  getObject() {\n    return this.object;\n  }\n\n  create() {\n    if (!DiceManager.world)\n      throw new Error(\"You must call DiceManager.setWorld(world) first.\");\n    this.object = new THREE.Mesh(this.getGeometry(), this.getMaterials());\n\n    this.object.reveiceShadow = true;\n    this.object.castShadow = true;\n    this.object.diceObject = this;\n    this.object.body = new CANNON.Body({\n      mass: this.mass,\n      shape: this.object.geometry.cannon_shape,\n      material: DiceManager.diceBodyMaterial\n    });\n    this.object.body.linearDamping = 0.1;\n    this.object.body.angularDamping = 0.1;\n    DiceManager.world.add(this.object.body);\n\n    return this.object;\n  }\n\n  updateMeshFromBody() {\n    if (!this.simulationRunning) {\n      this.object.position.copy(this.object.body.position);\n      this.object.quaternion.copy(this.object.body.quaternion);\n    }\n  }\n\n  updateBodyFromMesh() {\n    this.object.body.position.copy(this.object.position);\n    this.object.body.quaternion.copy(this.object.quaternion);\n  }\n}\n\nexport class DiceD4 extends DiceObject {\n  constructor(options) {\n    super(options);\n\n    this.tab = -0.1;\n    this.af = (Math.PI * 7) / 6;\n    this.chamfer = 0.96;\n    this.vertices = [[1, 1, 1], [-1, -1, 1], [-1, 1, -1], [1, -1, -1]];\n    this.faces = [[1, 0, 2, 1], [0, 1, 3, 2], [0, 3, 2, 3], [1, 2, 3, 4]];\n    this.scaleFactor = 1.2;\n    this.values = 4;\n    this.faceTexts = [\n      [],\n      [\"0\", \"0\", \"0\"],\n      [\"2\", \"4\", \"3\"],\n      [\"1\", \"3\", \"4\"],\n      [\"2\", \"1\", \"4\"],\n      [\"1\", \"2\", \"3\"]\n    ];\n    this.customTextTextureFunction = function(text, color, backColor) {\n      let canvas = document.createElement(\"canvas\");\n      let context = canvas.getContext(\"2d\");\n      let ts = this.calculateTextureSize(this.size / 2 + this.size * 2) * 2;\n      canvas.width = canvas.height = ts;\n      context.font = ts / 5 + \"pt Arial\";\n      context.fillStyle = backColor;\n      context.fillRect(0, 0, canvas.width, canvas.height);\n      context.textAlign = \"center\";\n      context.textBaseline = \"middle\";\n      context.fillStyle = color;\n      for (let i in text) {\n        context.fillText(\n          text[i],\n          canvas.width / 2,\n          canvas.height / 2 - ts * 0.3\n        );\n        context.translate(canvas.width / 2, canvas.height / 2);\n        context.rotate((Math.PI * 2) / 3);\n        context.translate(-canvas.width / 2, -canvas.height / 2);\n      }\n      let texture = new THREE.Texture(canvas);\n      texture.needsUpdate = true;\n      return texture;\n    };\n    this.mass = 300;\n    this.inertia = 5;\n    this.invertUpside = true;\n\n    this.create();\n  }\n}\n\nexport class DiceD6 extends DiceObject {\n  constructor(options) {\n    super(options);\n\n    this.tab = 0.1;\n    this.af = Math.PI / 4;\n    this.chamfer = 0.96;\n    this.vertices = [\n      [-1, -1, -1],\n      [1, -1, -1],\n      [1, 1, -1],\n      [-1, 1, -1],\n      [-1, -1, 1],\n      [1, -1, 1],\n      [1, 1, 1],\n      [-1, 1, 1]\n    ];\n    this.faces = [\n      [0, 3, 2, 1, 1],\n      [1, 2, 6, 5, 2],\n      [0, 1, 5, 4, 3],\n      [3, 7, 6, 2, 4],\n      [0, 4, 7, 3, 5],\n      [4, 5, 6, 7, 6]\n    ];\n    this.scaleFactor = 0.9;\n    this.values = 6;\n    this.faceTexts = [\n      \" \",\n      \"0\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"10\",\n      \"11\",\n      \"12\",\n      \"13\",\n      \"14\",\n      \"15\",\n      \"16\",\n      \"17\",\n      \"18\",\n      \"19\",\n      \"20\"\n    ];\n    this.textMargin = 1.0;\n    this.mass = 300;\n    this.inertia = 13;\n\n    this.create();\n  }\n}\n\nexport class DiceD8 extends DiceObject {\n  constructor(options) {\n    super(options);\n\n    this.tab = 0;\n    this.af = -Math.PI / 4 / 2;\n    this.chamfer = 0.965;\n    this.vertices = [\n      [1, 0, 0],\n      [-1, 0, 0],\n      [0, 1, 0],\n      [0, -1, 0],\n      [0, 0, 1],\n      [0, 0, -1]\n    ];\n    this.faces = [\n      [0, 2, 4, 1],\n      [0, 4, 3, 2],\n      [0, 3, 5, 3],\n      [0, 5, 2, 4],\n      [1, 3, 4, 5],\n      [1, 4, 2, 6],\n      [1, 2, 5, 7],\n      [1, 5, 3, 8]\n    ];\n    this.scaleFactor = 1;\n    this.values = 8;\n    this.faceTexts = [\n      \" \",\n      \"0\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"10\",\n      \"11\",\n      \"12\",\n      \"13\",\n      \"14\",\n      \"15\",\n      \"16\",\n      \"17\",\n      \"18\",\n      \"19\",\n      \"20\"\n    ];\n    this.textMargin = 1.2;\n    this.mass = 340;\n    this.inertia = 10;\n\n    this.create();\n  }\n}\n\nexport class DiceD10 extends DiceObject {\n  constructor(options) {\n    super(options);\n\n    this.tab = 0;\n    this.af = (Math.PI * 6) / 5;\n    this.chamfer = 0.945;\n    this.vertices = [];\n    this.faces = [\n      [5, 7, 11, 0],\n      [4, 2, 10, 1],\n      [1, 3, 11, 2],\n      [0, 8, 10, 3],\n      [7, 9, 11, 4],\n      [8, 6, 10, 5],\n      [9, 1, 11, 6],\n      [2, 0, 10, 7],\n      [3, 5, 11, 8],\n      [6, 4, 10, 9],\n      [1, 0, 2, -1],\n      [1, 2, 3, -1],\n      [3, 2, 4, -1],\n      [3, 4, 5, -1],\n      [5, 4, 6, -1],\n      [5, 6, 7, -1],\n      [7, 6, 8, -1],\n      [7, 8, 9, -1],\n      [9, 8, 0, -1],\n      [9, 0, 1, -1]\n    ];\n\n    for (let i = 0, b = 0; i < 10; ++i, b += (Math.PI * 2) / 10) {\n      this.vertices.push([Math.cos(b), Math.sin(b), 0.105 * (i % 2 ? 1 : -1)]);\n    }\n    this.vertices.push([0, 0, -1]);\n    this.vertices.push([0, 0, 1]);\n\n    this.scaleFactor = 0.9;\n    this.values = 10;\n    this.faceTexts = [\n      \" \",\n      \"0\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"10\",\n      \"11\",\n      \"12\",\n      \"13\",\n      \"14\",\n      \"15\",\n      \"16\",\n      \"17\",\n      \"18\",\n      \"19\",\n      \"20\"\n    ];\n    this.textMargin = 1.0;\n    this.mass = 350;\n    this.inertia = 9;\n\n    this.create();\n  }\n}\n\nexport class DiceD12 extends DiceObject {\n  constructor(options) {\n    super(options);\n\n    let p = (1 + Math.sqrt(5)) / 2;\n    let q = 1 / p;\n\n    this.tab = 0.2;\n    this.af = -Math.PI / 4 / 2;\n    this.chamfer = 0.968;\n    this.vertices = [\n      [0, q, p],\n      [0, q, -p],\n      [0, -q, p],\n      [0, -q, -p],\n      [p, 0, q],\n      [p, 0, -q],\n      [-p, 0, q],\n      [-p, 0, -q],\n      [q, p, 0],\n      [q, -p, 0],\n      [-q, p, 0],\n      [-q, -p, 0],\n      [1, 1, 1],\n      [1, 1, -1],\n      [1, -1, 1],\n      [1, -1, -1],\n      [-1, 1, 1],\n      [-1, 1, -1],\n      [-1, -1, 1],\n      [-1, -1, -1]\n    ];\n    this.faces = [\n      [2, 14, 4, 12, 0, 1],\n      [15, 9, 11, 19, 3, 2],\n      [16, 10, 17, 7, 6, 3],\n      [6, 7, 19, 11, 18, 4],\n      [6, 18, 2, 0, 16, 5],\n      [18, 11, 9, 14, 2, 6],\n      [1, 17, 10, 8, 13, 7],\n      [1, 13, 5, 15, 3, 8],\n      [13, 8, 12, 4, 5, 9],\n      [5, 4, 14, 9, 15, 10],\n      [0, 12, 8, 10, 16, 11],\n      [3, 19, 7, 17, 1, 12]\n    ];\n    this.scaleFactor = 0.9;\n    this.values = 12;\n    this.faceTexts = [\n      \" \",\n      \"0\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"10\",\n      \"11\",\n      \"12\",\n      \"13\",\n      \"14\",\n      \"15\",\n      \"16\",\n      \"17\",\n      \"18\",\n      \"19\",\n      \"20\"\n    ];\n    this.textMargin = 1.0;\n    this.mass = 350;\n    this.inertia = 8;\n\n    this.create();\n  }\n}\n\nexport class DiceD20 extends DiceObject {\n  constructor(options) {\n    super(options);\n\n    let t = (1 + Math.sqrt(5)) / 2;\n\n    this.tab = -0.2;\n    this.af = -Math.PI / 4 / 2;\n    this.chamfer = 0.955;\n    this.vertices = [\n      [-1, t, 0],\n      [1, t, 0],\n      [-1, -t, 0],\n      [1, -t, 0],\n      [0, -1, t],\n      [0, 1, t],\n      [0, -1, -t],\n      [0, 1, -t],\n      [t, 0, -1],\n      [t, 0, 1],\n      [-t, 0, -1],\n      [-t, 0, 1]\n    ];\n    this.faces = [\n      [0, 11, 5, 1],\n      [0, 5, 1, 2],\n      [0, 1, 7, 3],\n      [0, 7, 10, 4],\n      [0, 10, 11, 5],\n      [1, 5, 9, 6],\n      [5, 11, 4, 7],\n      [11, 10, 2, 8],\n      [10, 7, 6, 9],\n      [7, 1, 8, 10],\n      [3, 9, 4, 11],\n      [3, 4, 2, 12],\n      [3, 2, 6, 13],\n      [3, 6, 8, 14],\n      [3, 8, 9, 15],\n      [4, 9, 5, 16],\n      [2, 4, 11, 17],\n      [6, 2, 10, 18],\n      [8, 6, 7, 19],\n      [9, 8, 1, 20]\n    ];\n    this.scaleFactor = 1;\n    this.values = 20;\n    this.faceTexts = [\n      \" \",\n      \"0\",\n      \"1\",\n      \"2\",\n      \"3\",\n      \"4\",\n      \"5\",\n      \"6\",\n      \"7\",\n      \"8\",\n      \"9\",\n      \"10\",\n      \"11\",\n      \"12\",\n      \"13\",\n      \"14\",\n      \"15\",\n      \"16\",\n      \"17\",\n      \"18\",\n      \"19\",\n      \"20\"\n    ];\n    this.textMargin = 1.0;\n    this.mass = 400;\n    this.inertia = 6;\n\n    this.create();\n  }\n}\n\n//---------------------------------------------//\n\nexport const DiceManager = new DiceManagerClass();\n","// See:\n// dice logic + old, but great ui - http://a.teall.info/dice\n// dice throw - https://github.com/byWulf/threejs-dice/blob/master/examples/rolling.html\n// three.js in React - https://medium.com/@colesayershapiro/using-three-js-in-react-6cb71e87bdf4\n// Thanks to all the authors!!!\nimport React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport * as CANNON from \"cannon\";\nimport OrbitControls from \"orbit-controls-es6\";\n\nimport {\n  DiceManager,\n  DiceD4,\n  DiceD6,\n  DiceD8,\n  DiceD10,\n  DiceD12,\n  DiceD20,\n  DiceObject\n} from \"./dice\";\n\nexport const DICE_TYPES = {\n  D4: \"D4\",\n  D6: \"D6\",\n  D8: \"D8\",\n  D10: \"D10\",\n  D12: \"D12\",\n  D20: \"D20\"\n};\n\nconst DEFAULT_DICE_SIZE = 4;\n\nclass Dices3d extends Component {\n  componentDidMount() {\n    if (!Array.isArray(this.props.dices)) {\n      throw new Error(\n        \"Required argument 'dices' is missing. It has to be an array of dice configs like [{ type: 'D6', backColor: 'red', value: 4 }]\"\n      );\n    }\n\n    // SCENE\n    this.scene = new THREE.Scene();\n    this.scene.background = \"white\";\n    // CAMERA\n    const width = this.mount.clientWidth;\n    const height = this.mount.clientHeight;\n    const viewAngle = 45;\n    const ratio = width / height;\n    const near = 0.1;\n    const far = 1000;\n    this.camera = new THREE.PerspectiveCamera(viewAngle, ratio, near, far);\n    this.camera.position.set(0, 30, 30);\n    this.scene.add(this.camera);\n\n    // RENDERER\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setSize(width, height);\n    this.renderer.shadowMap.enabled = true;\n\n    this.mount.appendChild(this.renderer.domElement);\n\n    // CONTROLS\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n\n    // LIGHTS\n    const ambient = new THREE.AmbientLight(\"#ffffff\", 0.3);\n    this.scene.add(ambient);\n    const directionalLight = new THREE.DirectionalLight(\"#ffffff\", 0.5);\n    directionalLight.position.x = -1000;\n    directionalLight.position.y = 1000;\n    directionalLight.position.z = 1000;\n    this.scene.add(directionalLight);\n    const light = new THREE.SpotLight(0xefdfd5, 1.3);\n    light.position.y = 100;\n    light.target.position.set(0, 0, 0);\n    light.castShadow = true;\n    light.shadow.camera.near = 50;\n    light.shadow.camera.far = 110;\n    light.shadow.mapSize.width = 1024;\n    light.shadow.mapSize.height = 1024;\n    this.scene.add(light);\n\n    ////////////\n    // CUSTOM //\n    ////////////\n    this.world = new CANNON.World();\n    this.world.gravity.set(0, -9.82 * 20, 0);\n    this.world.broadphase = new CANNON.NaiveBroadphase();\n    this.world.solver.iterations = 16;\n    DiceManager.setWorld(this.world);\n\n    // Floor\n    const floorBody = new CANNON.Body({\n      mass: 0,\n      shape: new CANNON.Plane(),\n      material: DiceManager.floorBodyMaterial\n    });\n    floorBody.quaternion.setFromAxisAngle(\n      new CANNON.Vec3(1, 0, 0),\n      -Math.PI / 2\n    );\n    this.world.add(floorBody);\n\n    // Dice\n    this.diceModels = this.generateDiceModels(this.props.dices);\n    this.diceModels.forEach(dice => this.scene.add(dice.getObject()));\n\n    this.prepareDicesValues(this.props.dices.map(dice => dice.value));\n    this.start();\n  }\n\n  componentWillUnmount() {\n    this.stop();\n    this.mount.removeChild(this.renderer.domElement);\n  }\n\n  generateDiceModels = dices => {\n    return dices.map(dice => {\n      const { type, size } = dice;\n      const diceSize = size || DEFAULT_DICE_SIZE;\n      if (type === DICE_TYPES.D4) {\n        return new DiceD4({ size: diceSize, ...dice });\n      }\n      if (type === DICE_TYPES.D6) {\n        return new DiceD6({ size: diceSize, ...dice });\n      }\n      if (type === DICE_TYPES.D8) {\n        return new DiceD8({ size: diceSize, ...dice });\n      }\n      if (type === DICE_TYPES.D10) {\n        return new DiceD10({ size: diceSize, ...dice });\n      }\n      if (type === DICE_TYPES.D12) {\n        return new DiceD12({ size: diceSize, ...dice });\n      }\n      if (type === DICE_TYPES.D20) {\n        return new DiceD20({ size: diceSize, ...dice });\n      }\n      return new DiceObject({ size: diceSize, ...dice });\n    });\n  };\n\n  prepareDicesValues = values => {\n    const diceValues = this.diceModels.map((diceModel, index) => {\n      const { size } = diceModel;\n      const diceObject = diceModel.getObject();\n      diceObject.position.x = -15 - (index % 3) * size;\n      diceObject.position.y = 2 + Math.floor(index / 3) * size;\n      diceObject.position.z = -15 + (index % 3) * size;\n      diceObject.quaternion.x = ((Math.random() * 90 - 45) * Math.PI) / 180;\n      diceObject.quaternion.z = ((Math.random() * 90 - 45) * Math.PI) / 180;\n      diceModel.updateBodyFromMesh();\n      const yRand = Math.random() * 20;\n      const rand = Math.random() * 5;\n      diceObject.body.velocity.set(25 + rand, 40 + yRand, 15 + rand);\n      return { dice: diceModel, value: values[index] };\n    });\n\n    DiceManager.prepareValues(diceValues);\n  };\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  };\n\n  stop = () => {\n    cancelAnimationFrame(this.frameId);\n  };\n\n  animate = () => {\n    this.updatePhysics();\n    this.renderScene();\n    this.controls.update();\n    this.frameId = window.requestAnimationFrame(this.animate);\n  };\n\n  updatePhysics = () => {\n    this.world.step(1.0 / 60.0);\n    this.diceModels.forEach(diceModel => diceModel.updateMeshFromBody());\n  };\n\n  renderScene = () => {\n    this.renderer.render(this.scene, this.camera);\n  };\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        style={{\n          width: this.props.width,\n          height: this.props.height || \"300px\",\n          ...this.props.style\n        }}\n        ref={mount => {\n          this.mount = mount;\n        }}\n      />\n    );\n  }\n}\n\nexport default Dices3d;\n","import React, { Component, Fragment } from \"react\";\n\nimport Dialog from \"../libs/territories-ui/Dialog\";\nimport Dices3d, { DICE_TYPES } from \"../libs/react-dice-3d\";\n\nclass DicesWindow extends Component {\n  state = {\n    open: false\n  };\n\n  componentDidUpdate(prevProps) {\n    const { rollingDices } = this.props;\n    if (rollingDices && rollingDices !== prevProps.rollingDices) {\n      this.setState({ open: true });\n      setTimeout(() => {\n        this.setState({ open: false });\n        this.props.onFinishRoll();\n      }, 3000);\n    }\n  }\n\n  render() {\n    const { rollingDices } = this.props;\n    const { open } = this.state;\n\n    return (\n      <Fragment>\n        <Dialog open={open} fullWidth>\n          {/* Dice component is mounted again when dialog is open \n          cause of required dice init logic in componentDidMount */}\n          {open && rollingDices && (\n            <Dices3d\n              dices={[\n                {\n                  type: DICE_TYPES.D6,\n                  backColor: \"red\",\n                  fontColor: \"white\",\n                  value: rollingDices[0]\n                },\n                {\n                  type: DICE_TYPES.D6,\n                  backColor: \"blue\",\n                  fontColor: \"white\",\n                  value: rollingDices[1]\n                }\n              ]}\n            />\n          )}\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\nexport default DicesWindow;\n","import Rotate from \"@material-ui/icons/RotateLeft\";\n\nexport default Rotate;\n","import Paper from \"@material-ui/core/Paper\";\n\nexport default Paper;\n","import styled from \"styled-components\";\nimport { Container } from \"../libs/territories-ui/Grid\";\nimport Paper from \"../libs/territories-ui/Paper\";\n\nexport const FixedSizePaper = styled(Paper)`\n  && {\n    height: ${props => props.height};\n    width: ${props => props.width};\n  }\n`;\n\nexport const FullHeightContainer = styled(Container)`\n  height: 100%;\n`;\n","import React from \"react\";\nimport intl from \"react-intl-universal\";\nimport * as GameUtils from \"territories-core\";\n\nimport Button from \"../libs/territories-ui/Button\";\nimport { Container, Item } from \"../libs/territories-ui/Grid\";\nimport DicesWindow from \"../DicesWindow\";\nimport IconButton from \"../libs/territories-ui/IconButton\";\nimport Player from \"../Player\";\nimport Rectangle from \"../libs/territories-ui/Rectangle\";\nimport RotateIcon from \"../libs/territories-icons/Rotate\";\nimport Tooltip from \"../libs/territories-ui/Tooltip\";\nimport { FixedSizePaper, FullHeightContainer } from \"./elements\";\n\nconst PlayersControls = ({\n  cellRadius,\n  currentPlayer,\n  dices,\n  rollingDices,\n  allCellsCount,\n  occupiedCounters,\n  readOnly,\n  onStartRollDices,\n  onFinishRollDices,\n  onRotateRectangle,\n  onSkipTurn\n}) => (\n  <Container>\n    <Item>\n      <Player\n        player={GameUtils.PLAYER_1}\n        isCurrent={GameUtils.isPlayer1(currentPlayer)}\n        allCellsCount={allCellsCount}\n        playerCellsCount={occupiedCounters[GameUtils.PLAYER_1]}\n        readOnly={readOnly}\n        onSkipTurn={onSkipTurn}\n      />\n    </Item>\n    <Item center>\n      <div>\n        <FixedSizePaper\n          height={`${cellRadius * 25}px`}\n          width={`${cellRadius * 25}px`}\n        >\n          {dices && dices[0] !== 0 ? (\n            <FullHeightContainer column center alignItems=\"center\">\n              <Item>\n                <Tooltip title=\"Rotate rectangle\">\n                  <IconButton\n                    disabled={readOnly}\n                    size=\"small\"\n                    onClick={onRotateRectangle}\n                  >\n                    <RotateIcon />\n                  </IconButton>\n                </Tooltip>\n              </Item>\n              <Item center>\n                <Rectangle\n                  rows={Array(dices[0]).fill(Array(dices[1]).fill())}\n                  cellRadius={cellRadius}\n                />\n              </Item>\n            </FullHeightContainer>\n          ) : (\n            <FullHeightContainer column center alignItems=\"center\">\n              <Button\n                disabled={readOnly}\n                color={\n                  GameUtils.isPlayer1(currentPlayer) ? \"primary\" : \"secondary\"\n                }\n                size=\"large\"\n                variant=\"contained\"\n                onClick={onStartRollDices}\n              >\n                {intl.get(\"player_controls.roll_dices\")}\n              </Button>\n            </FullHeightContainer>\n          )}\n        </FixedSizePaper>\n        <DicesWindow\n          rollingDices={rollingDices}\n          onFinishRoll={onFinishRollDices}\n        />\n      </div>\n    </Item>\n    <Item>\n      <Player\n        player={GameUtils.PLAYER_2}\n        isCurrent={GameUtils.isPlayer2(currentPlayer)}\n        allCellsCount={allCellsCount}\n        playerCellsCount={occupiedCounters[GameUtils.PLAYER_2]}\n        readOnly={readOnly}\n        onSkipTurn={onSkipTurn}\n      />\n    </Item>\n  </Container>\n);\n\nexport default PlayersControls;\n","import styled from \"styled-components\";\nimport { Item } from \"../libs/territories-ui/Grid\";\n\nexport const DetachedItem = styled(Item)`\n  /* Bottom margin from board */\n  margin-bottom: 24px;\n`;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { PLAYER_1, PLAYER_2, selectGameover } from \"territories-core\";\n\nimport Board from \"../Board\";\nimport Congratulations from \"../Congratulations\";\nimport { Container, Item } from \"../libs/territories-ui/Grid\";\nimport LinearProgress from \"../libs/territories-ui/LinearProgress\";\nimport PlayersControls from \"../PlayersControls\";\nimport PlayersNamesContext from \"../playersNamesContext\";\nimport { DetachedItem } from \"./elements\";\n\n// Uncomment to collect data for AI\n// import * as AiTrainingData from \"../AiTrainingData\";\n\n// Uncomment for neural network function generation\n// import brain from \"brain.js\"; // yarn add brain.js\n// import myTrainingData from \"../AiTrainingData/medium.json\";\n// const net = new brain.NeuralNetwork();\n// net.train(myTrainingData);\n// console.log(net.toFunction());\n\nconst CELL_RADIUS = 10;\n\nclass UI extends Component {\n  state = {\n    isLoadingNames: false,\n    playersNames: {\n      [PLAYER_1]: \"Alice\",\n      [PLAYER_2]: \"Bob\"\n    }\n  };\n\n  componentDidMount() {\n    const { ai, isMultiplayer, gameID } = this.props;\n\n    if (ai) {\n      this.setState({\n        playersNames: {\n          ...this.state.playersNames,\n          [ai.playerID]: ai.name || \"Bot\"\n        }\n      });\n      return;\n    }\n\n    if (!isMultiplayer || !gameID) {\n      return;\n    }\n\n    // Load players names if it is a multiplayer\n    // Cause boardgame.io framework doesn't support name handling..\n    this.setState({ isLoadingNames: true });\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/games/territories`)\n      .then(response => {\n        const gameInstance =\n          response.data &&\n          response.data.gameInstances.find(\n            gameInstance => gameInstance.gameID === gameID\n          );\n        if (!gameInstance) {\n          return;\n        }\n        this.setState({\n          playersNames: gameInstance.players.reduce((object, player) => {\n            object[`${player.id}`] = player.name;\n            return object;\n          }, {})\n        });\n      })\n      .finally(() => this.setState({ isLoadingNames: false }));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { ai } = this.props;\n    if (!ai) {\n      return;\n    }\n\n    const { currentPlayer } = this.props.ctx;\n    if (ai.playerID !== currentPlayer) {\n      return;\n    }\n\n    if (prevProps.ctx.currentPlayer !== currentPlayer) {\n      setTimeout(() => {\n        this.handleStartRollDices();\n      }, 500);\n    }\n\n    const { dices, board, allCellsCount, occupiedCounters } = this.props.G;\n    const { turn } = this.props.ctx;\n    if (\n      dices &&\n      prevProps.G.dices &&\n      prevProps.G.dices !== dices &&\n      dices[0] !== 0 &&\n      // Skip bot recalculation after rotating\n      dices[0] !== prevProps.G.dices[1] &&\n      dices[1] !== prevProps.G.dices[0]\n    ) {\n      const rectangleHeight = dices[0];\n      const rectangleWidth = dices[1];\n      const result = ai.guessCellToDropRectangle({\n        turn,\n        currentPlayer,\n        rectangleHeight,\n        rectangleWidth,\n        rows: board,\n        emptyCellsCount:\n          allCellsCount - occupiedCounters[0] - occupiedCounters[1]\n      });\n      if (result.rowIndex === -1 || result.columnIndex === -1) {\n        // Skip turn if there are no available cells\n        setTimeout(() => {\n          this.handleEndTurn();\n        }, 1000);\n      } else if (result.rectangleHeight !== rectangleHeight) {\n        // Rotate if needed\n        setTimeout(() => {\n          this.handleRotateRectangle();\n          setTimeout(() => {\n            this.handleDropRectangle(result);\n          }, 1000);\n        }, 1000);\n      } else {\n        setTimeout(() => {\n          this.handleDropRectangle(result);\n        }, 1000);\n      }\n    }\n  }\n\n  handleStartRollDices = () => {\n    this.props.moves.startRollDices();\n  };\n\n  handleFinishRollDices = () => {\n    const {\n      isMultiplayer,\n      playerID,\n      ctx: { currentPlayer }\n    } = this.props;\n    // Skip roll finish for multiplayers\n    if (isMultiplayer && playerID !== currentPlayer) {\n      return;\n    }\n    this.props.moves.finishRollDices();\n  };\n\n  handleRotateRectangle = () => {\n    this.props.moves.switchDices();\n  };\n\n  handleDropRectangle = ({\n    rowIndex,\n    columnIndex,\n    rectangleHeight,\n    rectangleWidth\n  }) => {\n    this.props.moves.dropRectangle(\n      rowIndex,\n      columnIndex,\n      rectangleHeight,\n      rectangleWidth\n    );\n    this.handleEndTurn();\n    // Uncomment to collect data for AI\n    // if (this.props.ctx.currentPlayer === PLAYER_2) {\n    //   AiTrainingData.collect({\n    //     columnIndex,\n    //     rowIndex,\n    //     rectangleHeight,\n    //     rectangleWidth,\n    //     turn: this.props.ctx.turn,\n    //     currentPlayer: this.props.ctx.currentPlayer,\n    //     rows: this.props.G.board,\n    //     emptyCellsCount:\n    //       this.props.G.allCellsCount -\n    //       this.props.G.occupiedCounters[0] -\n    //       this.props.G.occupiedCounters[1]\n    //   });\n    // }\n  };\n\n  handleEndTurn = () => {\n    this.props.moves.clearDices();\n    this.props.events.endTurn();\n  };\n\n  render() {\n    const {\n      G: { board, dices, rollingDices, allCellsCount, occupiedCounters },\n      ctx: { currentPlayer },\n      isActive,\n      ai\n    } = this.props;\n    const { isLoadingNames, playersNames } = this.state;\n\n    if (isLoadingNames) {\n      return <LinearProgress color=\"primary\" />;\n    }\n\n    const readOnly = !isActive || (ai && ai.playerID === currentPlayer);\n\n    return (\n      <PlayersNamesContext.Provider value={playersNames}>\n        <Container column>\n          <DetachedItem center>\n            <PlayersControls\n              cellRadius={CELL_RADIUS}\n              dices={dices}\n              rollingDices={rollingDices}\n              currentPlayer={currentPlayer}\n              allCellsCount={allCellsCount}\n              occupiedCounters={occupiedCounters}\n              readOnly={readOnly}\n              onStartRollDices={this.handleStartRollDices}\n              onFinishRollDices={this.handleFinishRollDices}\n              onRotateRectangle={this.handleRotateRectangle}\n              onSkipTurn={this.handleEndTurn}\n            />\n          </DetachedItem>\n          <Item center>\n            <Board\n              disabled={readOnly || !dices || dices[0] === 0}\n              cellRadius={CELL_RADIUS}\n              rows={board}\n              rectangleHeight={dices ? dices[0] : 0}\n              rectangleWidth={dices ? dices[1] : 0}\n              currentPlayer={currentPlayer}\n              onDropRectangle={this.handleDropRectangle}\n            />\n          </Item>\n          {/* Win or Draw modal */}\n          <Congratulations\n            gameover={selectGameover({ allCellsCount, occupiedCounters })}\n          />\n        </Container>\n      </PlayersNamesContext.Provider>\n    );\n  }\n}\n\nexport default UI;\n","import CardHeader from \"@material-ui/core/CardHeader\";\n\nexport default CardHeader;\n","import Card from \"@material-ui/core/Card\";\n\nexport default Card;\n","import CardContent from \"@material-ui/core/CardContent\";\n\nexport default CardContent;\n","module.exports = __webpack_public_path__ + \"static/media/congratulations.83861842.gif\";"],"sourceRoot":""}