{"version":3,"sources":["libs/territories-ui/TextField.js","OnlineLogin/elements.js","OnlineLogin/index.js","libs/territories-icons/Add.js","libs/territories-icons/Refresh.js","libs/territories-ui/Chip.js","libs/territories-icons/Versus.js","OnlineRoom/elements.js","OnlineRoom/index.js","OnlineRooms/elements.js","OnlineRooms/index.js","libs/territories-icons/Logout.js","OnlineExit/elements.js","OnlineExit/index.js","OnlineLobby/index.js","OnlineLobbyPage/index.js"],"names":["TextField","StyledTextField","styled","OnlineLogin","props","handlePlayerNameChange","value","target","setState","changingPlayerName","handleLogin","onLogin","state","getErrorMessage","playersNames","test","length","intl","get","includes","playerName","this","errorMessage","hasError","column","alignItems","label","error","helperText","margin","variant","onKeyPress","key","onChange","Button","disabled","color","size","onClick","Component","Add","Refresh","Chip","Versus","SvgIcon","viewBox","style","enableBackground","fill","d","DetachedButton","DetachedContainer","Container","AlignCenterItem","Item","AlignLeftItem","AlignRightItem","findPlayerSeat","players","find","player","name","findFreeSeat","StyledRoom","handleJoinClick","roomId","onJoin","id","handleLeaveClick","onLeave","handlePlayClick","onPlay","handleSpectateClick","onSpectate","alreadyJoined","playerSeat","freeSeat","flex","IconButton","Layout","div","OnlineRooms","handleCreateRoomClick","onCreate","handleRefreshRooms","onRefresh","handleJoinRoomClick","gameId","playerId","handleLeaveRoomClick","numPlayers","gameInstances","Card","CardHeader","title","subheader","action","Tooltip","Array","isArray","CardContent","map","gameInstance","OnlineRoom","gameID","substring","Logout","OnlineExit","exitButtonLabel","onExit","spaceBetween","selectGameName","gameComponents","game","selectAllPlayersNames","forEach","push","OnlineLobby","handleLoginClick","onEnterLobby","handleLogoutClick","filter","some","onExitLobby","onCreateRoom","handleRefreshRoomsClick","onRefreshRooms","onJoinRoom","onLeaveRoom","onStartGame","playerID","handleExitRoomClick","onExitRoom","setInterval","errorMsg","phase","runningGame","Error","onLogout","app","credentials","OnlineLobbyPage","gameServer","process","lobbyServer","Game","board","UI","loading","renderer","handleEnterLobby","handleExitLobby","handleCreateRoom","handleJoinRoom","handleLeaveRoom","handleExitRoom","handleStartGame"],"mappings":"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","file":"static/js/8.2ef786f0.chunk.js","sourcesContent":["import TextField from \"@material-ui/core/TextField\";\n\nexport default TextField;\n","import styled from \"styled-components\";\nimport TextField from \"../libs/territories-ui/TextField\";\n\nexport const StyledTextField = styled(TextField)`\n  && {\n    min-width: 250px;\n  }\n`;\n","import React, { Component } from \"react\";\nimport intl from \"react-intl-universal\";\n\nimport Button from \"../libs/territories-ui/Button\";\nimport { Container, Item } from \"../libs/territories-ui/Grid\";\nimport { StyledTextField } from \"./elements\";\n\nclass OnlineLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      changingPlayerName: props.playerName\n    };\n  }\n\n  handlePlayerNameChange = ({ target: { value } }) => {\n    this.setState({ changingPlayerName: value });\n  };\n\n  handleLogin = () => {\n    // TODO add user to AUTH server\n    this.props.onLogin(this.state.changingPlayerName);\n  };\n\n  getErrorMessage = (changingPlayerName, playersNames) => {\n    if (!changingPlayerName) {\n      return intl.get(\"online.name_not_empty\");\n    }\n    if (!/^\\w+$/.test(changingPlayerName)) {\n      return intl.get(\"online.name_invalid_characters\");\n    }\n    if (changingPlayerName.length > 15) {\n      return intl.get(\"online.name_too_long\");\n    }\n    // TODO load players names from AUTH server\n    if (playersNames.includes(changingPlayerName)) {\n      return intl.get(\"online.name_taken\");\n    }\n    return null;\n  };\n\n  render() {\n    const { changingPlayerName } = this.state;\n    const { playersNames } = this.props;\n\n    const errorMessage = this.getErrorMessage(changingPlayerName, playersNames);\n    const hasError = !!errorMessage;\n\n    return (\n      <Container column alignItems=\"center\">\n        <Item>\n          <StyledTextField\n            label={intl.get(\"online.enter_name\")}\n            error={hasError}\n            helperText={errorMessage}\n            margin=\"normal\"\n            value={changingPlayerName}\n            variant=\"outlined\"\n            onKeyPress={({ key }) =>\n              !hasError && key === \"Enter\" && this.handleLogin()\n            }\n            onChange={this.handlePlayerNameChange}\n          />\n        </Item>\n        <Item>\n          <Button\n            disabled={hasError}\n            color=\"primary\"\n            size=\"large\"\n            variant=\"extendedFab\"\n            onClick={this.handleLogin}\n          >\n            {intl.get(\"online.login\")}\n          </Button>\n        </Item>\n      </Container>\n    );\n  }\n}\n\nexport default OnlineLogin;\n","import Add from \"@material-ui/icons/AddCircleOutline\";\n\nexport default Add;\n","import Refresh from \"@material-ui/icons/Refresh\";\n\nexport default Refresh;\n","import Chip from \"@material-ui/core/Chip\";\n\nexport default Chip;\n","import React from \"react\";\nimport SvgIcon from \"../territories-ui/SvgIcon\";\n\nconst Versus = props => (\n  <SvgIcon\n    viewBox=\"0 0 455.431 455.431\"\n    style={{ enableBackground: \"new 0 0 455.431 455.431\" }}\n    {...props}\n  >\n    <path\n      style={{ fill: \"#E08826\" }}\n      d=\"M405.493,412.764c-69.689,56.889-287.289,56.889-355.556,0c-69.689-56.889-62.578-300.089,0-364.089\n\ts292.978-64,355.556,0S475.182,355.876,405.493,412.764z\"\n    />\n    <path\n      style={{ fill: \"#F29A2F\" }}\n      d=\"M229.138,313.209c-62.578,49.778-132.267,75.378-197.689,76.8\n\tc-48.356-82.489-38.4-283.022,18.489-341.333c51.2-52.622,211.911-62.578,304.356-29.867\n\tC377.049,112.676,330.116,232.142,229.138,313.209z\"\n    />\n    <g>\n      <path\n        style={{ fill: \"#FFFFFF\" }}\n        d=\"M163.716,250.631l39.822-99.556h38.4L179.36,307.52h-29.867l-64-156.444h38.4L163.716,250.631z\"\n      />\n      <path\n        style={{ fill: \"#FFFFFF\" }}\n        d=\"M293.138,182.364c-2.844,2.844-5.689,7.111-5.689,11.378c0,4.267,1.422,8.533,5.689,11.378\n\t\tc4.267,2.844,14.222,5.689,28.444,9.956c14.222,4.267,27.022,8.533,34.133,17.067c8.533,7.111,12.8,18.489,12.8,31.289\n\t\tc0,14.222-5.689,25.6-15.644,34.133c-9.956,8.533-24.178,12.8-41.244,12.8c-24.178,0-46.933-8.533-66.844-27.022l21.333-25.6\n\t\tc17.067,14.222,32.711,22.756,46.933,22.756c7.111,0,11.378-1.422,15.644-4.267c4.267-2.844,5.689-7.111,5.689-11.378\n\t\ts-1.422-8.533-5.689-11.378c-4.267-2.844-11.378-5.689-22.756-8.533c-18.489-4.267-31.289-9.956-39.822-17.067\n\t\tc-8.533-7.111-12.8-18.489-12.8-32.711s5.689-25.6,15.644-34.133s24.178-11.378,39.822-11.378c9.956,0,21.333,1.422,31.289,5.689\n\t\tc9.956,4.267,19.911,8.533,27.022,15.644l-17.067,25.6c-14.222-9.956-27.022-15.644-42.667-15.644\n\t\tC301.671,178.098,297.404,179.52,293.138,182.364z\"\n      />\n    </g>\n  </SvgIcon>\n);\n\nexport default Versus;\n","import styled from \"styled-components\";\nimport Button from \"../libs/territories-ui/Button\";\nimport { Container, Item } from \"../libs/territories-ui/Grid\";\n\nexport const DetachedButton = styled(Button)`\n  && {\n    margin-left: 4px;\n  }\n`;\n\nexport const DetachedContainer = styled(Container)`\n  margin-top: 4px;\n`;\n\nexport const AlignCenterItem = styled(Item)`\n  text-align: center;\n`;\n\nexport const AlignLeftItem = styled(Item)`\n  text-align: left;\n`;\n\nexport const AlignRightItem = styled(Item)`\n  text-align: right;\n`;\n","import React, { Component } from \"react\";\nimport intl from \"react-intl-universal\";\n\nimport Chip from \"../libs/territories-ui/Chip\";\nimport IconButton from \"../libs/territories-ui/IconButton\";\nimport IconVersus from \"../libs/territories-icons/Versus\";\nimport {\n  AlignCenterItem,\n  AlignLeftItem,\n  AlignRightItem,\n  DetachedButton,\n  DetachedContainer\n} from \"./elements\";\n\nconst findPlayerSeat = (players, playerName) =>\n  players.find(player => player.name === playerName);\nconst findFreeSeat = players => players.find(player => !player.name);\n\nclass StyledRoom extends Component {\n  handleJoinClick = () => {\n    const { roomId, players } = this.props;\n    this.props.onJoin(roomId, findFreeSeat(players).id);\n  };\n\n  handleLeaveClick = () => {\n    this.props.onLeave(this.props.roomId);\n  };\n\n  handlePlayClick = () => {\n    const { roomId, players, playerName } = this.props;\n    this.props.onPlay(\n      roomId,\n      `${findPlayerSeat(players, playerName).id}`,\n      players.length\n    );\n  };\n\n  handleSpectateClick = () => {\n    const { roomId, players } = this.props;\n    this.props.onSpectate(roomId, players.length);\n  };\n\n  render() {\n    const { name, playerName, players, alreadyJoined } = this.props;\n    const playerSeat = findPlayerSeat(players, playerName);\n    const freeSeat = findFreeSeat(players);\n\n    return (\n      <DetachedContainer alignItems=\"center\">\n        <AlignLeftItem flex={3}>\n          <Chip label={name} />\n        </AlignLeftItem>\n        {/* TODO try smth better than vs */}\n        <AlignRightItem flex={2}>{players[0].name || \"...\"}</AlignRightItem>\n        <AlignCenterItem flex={2}>\n          <IconButton disabled>\n            <IconVersus />\n          </IconButton>\n        </AlignCenterItem>\n        <AlignLeftItem flex={2}>{players[1].name || \"...\"}</AlignLeftItem>\n        <AlignRightItem flex={3}>\n          {playerSeat && (\n            <DetachedButton variant=\"outlined\" onClick={this.handleLeaveClick}>\n              {intl.get(\"online.room_leave\")}\n            </DetachedButton>\n          )}\n          {freeSeat && !playerSeat && !alreadyJoined && (\n            <DetachedButton variant=\"outlined\" onClick={this.handleJoinClick}>\n              {intl.get(\"online.room_join\")}\n            </DetachedButton>\n          )}\n          {!freeSeat && playerSeat && (\n            <DetachedButton variant=\"outlined\" onClick={this.handlePlayClick}>\n              {intl.get(\"online.room_play\")}\n            </DetachedButton>\n          )}\n          {!freeSeat && !playerSeat && (\n            <DetachedButton\n              variant=\"outlined\"\n              onClick={this.handleSpectateClick}\n            >\n              {intl.get(\"online.room_spectate\")}\n            </DetachedButton>\n          )}\n        </AlignRightItem>\n      </DetachedContainer>\n    );\n  }\n}\n\nexport default StyledRoom;\n","import styled from \"styled-components\";\n\nexport const Layout = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n","import React, { Component, Fragment } from \"react\";\nimport intl from \"react-intl-universal\";\n\nimport Card from \"../libs/territories-ui/Card\";\nimport CardContent from \"../libs/territories-ui/CardContent\";\nimport CardHeader from \"../libs/territories-ui/CardHeader\";\nimport IconAdd from \"../libs/territories-icons/Add\";\nimport IconButton from \"../libs/territories-ui/IconButton\";\nimport IconRefresh from \"../libs/territories-icons/Refresh\";\nimport OnlineRoom from \"../OnlineRoom\";\nimport Tooltip from \"../libs/territories-ui/Tooltip\";\nimport { Layout } from \"./elements\";\n\nclass OnlineRooms extends Component {\n  handleCreateRoomClick = () => {\n    this.props.onCreate();\n  };\n\n  handleRefreshRooms = () => {\n    this.props.onRefresh();\n  };\n\n  handleJoinRoomClick = (gameId, playerId) => {\n    this.props.onJoin(gameId, playerId);\n  };\n\n  handleLeaveRoomClick = gameId => {\n    this.props.onLeave(gameId);\n  };\n\n  handlePlayClick = (gameId, playerId, numPlayers) => {\n    this.props.onPlay(gameId, playerId, numPlayers);\n  };\n\n  handleSpectateClick = (gameId, numPlayers) => {\n    this.props.onSpectate(gameId, numPlayers);\n  };\n\n  render() {\n    const { gameInstances, playerName, alreadyJoined } = this.props;\n\n    return (\n      <Layout>\n        <Card>\n          <CardHeader\n            title={intl.get(\"online.rooms_title\")}\n            subheader={intl.get(\"online.rooms_subtitle\")}\n            action={\n              <Fragment>\n                <Tooltip title={intl.get(\"online.new_room\")}>\n                  <IconButton\n                    color=\"primary\"\n                    disabled={\n                      !Array.isArray(gameInstances) || gameInstances.length > 4\n                    }\n                    onClick={this.handleCreateRoomClick}\n                  >\n                    <IconAdd />\n                  </IconButton>\n                </Tooltip>\n                <Tooltip title={intl.get(\"online.refresh\")}>\n                  <IconButton color=\"primary\" onClick={this.handleRefreshRooms}>\n                    <IconRefresh />\n                  </IconButton>\n                </Tooltip>\n              </Fragment>\n            }\n          />\n          <CardContent>\n            {Array.isArray(gameInstances) &&\n              gameInstances.map(gameInstance => (\n                <OnlineRoom\n                  key={`game-${gameInstance.gameID}`}\n                  name={`Territories ${gameInstance.gameID.substring(0, 3)}`}\n                  roomId={gameInstance.gameID}\n                  players={gameInstance.players}\n                  playerName={playerName}\n                  alreadyJoined={alreadyJoined}\n                  onJoin={this.handleJoinRoomClick}\n                  onLeave={this.handleLeaveRoomClick}\n                  onPlay={this.handlePlayClick}\n                  onSpectate={this.handleSpectateClick}\n                />\n              ))}\n          </CardContent>\n        </Card>\n      </Layout>\n    );\n  }\n}\n\nexport default OnlineRooms;\n","import Logout from \"@material-ui/icons/ExitToApp\";\n\nexport default Logout;\n","import styled from \"styled-components\";\n\nexport const Layout = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n`;\n","import React from \"react\";\nimport intl from \"react-intl-universal\";\n\nimport { Container, Item } from \"../libs/territories-ui/Grid\";\nimport IconButton from \"../libs/territories-ui/IconButton\";\nimport IconLogout from \"../libs/territories-icons/Logout\";\nimport Tooltip from \"../libs/territories-ui/Tooltip\";\nimport { Layout } from \"./elements\";\n\nconst OnlineExit = ({ exitButtonLabel, playerName, onExit }) => (\n  <Layout>\n    <Container alignItems=\"center\" spaceBetween>\n      <Item>\n        <h2>{intl.get(\"online.hello\", { name: playerName })}</h2>\n      </Item>\n      <Item>\n        <Tooltip title={exitButtonLabel}>\n          <IconButton onClick={onExit}>\n            <IconLogout />\n          </IconButton>\n        </Tooltip>\n      </Item>\n    </Container>\n  </Layout>\n);\n\nexport default OnlineExit;\n","import React, { Component, Fragment } from \"react\";\nimport intl from \"react-intl-universal\";\n\nimport Error from \"../Error\";\nimport OnlineLogin from \"../OnlineLogin\";\nimport OnlineRooms from \"../OnlineRooms\";\nimport OnlineExit from \"../OnlineExit\";\n\nconst selectGameName = props => props.gameComponents[0].game.name;\nconst selectAllPlayersNames = props => {\n  const playersNames = [];\n\n  if (!Array.isArray(props.gameInstances)) {\n    return playersNames;\n  }\n\n  props.gameInstances.forEach(gameInstance => {\n    gameInstance.players.forEach(player => {\n      if (player.name) {\n        playersNames.push(player.name);\n      }\n    });\n  });\n\n  return playersNames;\n};\n\nclass OnlineLobby extends Component {\n  componentDidMount() {\n    // Refresh all rooms every 15 seconds\n    setInterval(this.handleRefreshRoomsClick, 15000);\n  }\n\n  handleLoginClick = name => {\n    this.props.onEnterLobby(name);\n  };\n\n  handleLogoutClick = () => {\n    const { gameInstances, playerName } = this.props;\n    const currentPlayerGames = Array.isArray(gameInstances)\n      ? gameInstances.filter(gameInstance =>\n          gameInstance.players.some(player => player.name === playerName)\n        )\n      : [];\n    currentPlayerGames.forEach(game => this.handleLeaveRoomClick(game.gameID));\n    this.props.onExitLobby();\n  };\n\n  handleCreateRoomClick = () => {\n    this.props.onCreateRoom(selectGameName(this.props), 2);\n  };\n\n  handleRefreshRoomsClick = () => {\n    this.props.onRefreshRooms();\n  };\n\n  handleJoinRoomClick = (gameId, playerId) => {\n    this.props.onJoinRoom(selectGameName(this.props), gameId, playerId);\n  };\n\n  handleLeaveRoomClick = gameId => {\n    this.props.onLeaveRoom(selectGameName(this.props), gameId);\n  };\n\n  handlePlayClick = (gameId, playerId, numPlayers) => {\n    this.props.onStartGame(selectGameName(this.props), {\n      gameID: gameId,\n      playerID: playerId,\n      numPlayers\n    });\n  };\n\n  handleSpectateClick = (gameId, numPlayers) => {\n    this.props.onStartGame(selectGameName(this.props), {\n      gameID: gameId,\n      numPlayers\n    });\n  };\n\n  handleExitRoomClick = () => {\n    this.props.onExitRoom();\n  };\n\n  render() {\n    const {\n      errorMsg,\n      phase,\n      playerName,\n      gameInstances,\n      runningGame\n    } = this.props;\n\n    if (errorMsg) {\n      return (\n        <Error>\n          {intl.get(\"error\")}: {errorMsg}\n        </Error>\n      );\n    }\n\n    if (phase === \"enter\") {\n      return (\n        <OnlineLogin\n          playerName={playerName}\n          playersNames={selectAllPlayersNames(this.props)}\n          onLogin={this.handleLoginClick}\n        />\n      );\n    }\n\n    if (phase === \"list\") {\n      return (\n        <Fragment>\n          <OnlineExit\n            exitButtonLabel={intl.get(\"online.logout\")}\n            playerName={playerName}\n            onExit={this.handleLogoutClick}\n          />\n          <OnlineRooms\n            gameInstances={gameInstances}\n            playerName={playerName}\n            alreadyJoined={selectAllPlayersNames(this.props).includes(\n              playerName\n            )}\n            onCreate={this.handleCreateRoomClick}\n            onRefresh={this.handleRefreshRoomsClick}\n            onJoin={this.handleJoinRoomClick}\n            onLeave={this.handleLeaveRoomClick}\n            onPlay={this.handlePlayClick}\n            onSpectate={this.handleSpectateClick}\n            onLogout={this.handleLogoutClick}\n          />\n        </Fragment>\n      );\n    }\n\n    if (phase === \"play\") {\n      return (\n        <Fragment>\n          <OnlineExit\n            exitButtonLabel={intl.get(\"online.exit\")}\n            playerName={playerName}\n            onExit={this.handleExitRoomClick}\n          />\n          {runningGame && (\n            <runningGame.app\n              gameID={runningGame.gameID}\n              playerID={runningGame.playerID}\n              credentials={runningGame.credentials}\n            />\n          )}\n        </Fragment>\n      );\n    }\n\n    return \"Phase is unknown...\";\n  }\n}\n\nexport default OnlineLobby;\n","import React from \"react\";\nimport intl from \"react-intl-universal\";\nimport { Game } from \"territories-core\";\nimport { Lobby } from \"boardgame.io/react\";\n\nimport OnlineLobby from \"../OnlineLobby\";\nimport UI from \"../UI\";\n\nconst OnlineLobbyPage = () => (\n  <Lobby\n    gameServer={process.env.REACT_APP_API_URL}\n    lobbyServer={process.env.REACT_APP_API_URL}\n    gameComponents={[\n      {\n        game: Game,\n        board: UI,\n        loading: () => <div>{intl.get(\"online.connecting\")}</div>\n      }\n    ]}\n    renderer={({\n      errorMsg,\n      gameComponents,\n      gameInstances,\n      phase,\n      playerName,\n      runningGame,\n      handleEnterLobby,\n      handleExitLobby,\n      handleCreateRoom,\n      handleJoinRoom,\n      handleLeaveRoom,\n      handleExitRoom,\n      handleRefreshRooms,\n      handleStartGame\n    }) => (\n      <OnlineLobby\n        errorMsg={errorMsg}\n        gameComponents={gameComponents}\n        gameInstances={gameInstances}\n        phase={phase}\n        playerName={playerName}\n        runningGame={runningGame}\n        onEnterLobby={handleEnterLobby}\n        onExitLobby={handleExitLobby}\n        onCreateRoom={handleCreateRoom}\n        onJoinRoom={handleJoinRoom}\n        onLeaveRoom={handleLeaveRoom}\n        onExitRoom={handleExitRoom}\n        onRefreshRooms={handleRefreshRooms}\n        onStartGame={handleStartGame}\n      />\n    )}\n  />\n);\n\nexport default OnlineLobbyPage;\n"],"sourceRoot":""}