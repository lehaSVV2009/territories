{"version":3,"sources":["libs/territories-ui/Fab.js","libs/territories-ui/AppBar.js","libs/territories-icons/Github.js","libs/territories-ui/MenuItem.js","libs/territories-ui/Toolbar.js","initLocale.js","libs/territories-ui/Select.js","AppWrapper/elements.js","AppWrapper/index.js","Routes.js","App.js","serviceWorker.js","index.js","libs/territories-ui/LinearProgress.js","Error/elements.js","Error/index.js","libs/territories-ui/Grid.js","libs/territories-ui/IconButton.js","libs/territories-ui/Tooltip.js","libs/territories-ui/Button.js","libs/territories-ui/SvgIcon.js"],"names":["Fab","AppBar","Github","props","SvgIcon","d","MenuItem","Toolbar","SUPPORTED_LOCALES","en","ru","Select","Logo","styled","span","WhiteSelect","theme","colors","white","DetachedButton","Button","FixedAppBarMargin","div","AppWrapper","handleLogoClick","window","open","process","handleGithubClick","handleRulesClick","handleLanguageChange","value","target","Cookies","set","location","reload","currentLocale","intl","getInitOptions","color","position","onClick","this","get","onChange","Object","keys","map","lang","key","Tooltip","title","IconButton","children","Component","Loading","error","Error","LinearProgress","LoadableHomePage","Loadable","loader","loading","LoadableAiPage","LoadableTwoPlayersPage","LoadableOnlinePage","Routes","Switch","Route","exact","path","component","ErrorPage","yellow","gray","green","red","player1","player2","muiTheme","createMuiTheme","palette","primary","main","contrastText","secondary","App","state","loadingLocales","determineLocale","cookieLocaleKey","axios","then","res","init","locales","data","initLocale","setState","React","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","Face","Band","White","Red","Eyes","Dimples","Mouth","ErrorTitle","h1","ErrorDescription","handleGoHome","center","variant","Container","left","right","spaceBetween","spaceAround","column","alignItems","css","Item","flex"],"mappings":"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","file":"static/js/main.7649781e.chunk.js","sourcesContent":["import Fab from \"@material-ui/core/Fab\";\n\nexport default Fab;\n","import AppBar from \"@material-ui/core/AppBar\";\n\nexport default AppBar;\n","import React from \"react\";\nimport SvgIcon from \"../territories-ui/SvgIcon\";\n\nconst Github = props => (\n  <SvgIcon {...props}>\n    <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n  </SvgIcon>\n);\n\nexport default Github;\n","import MenuItem from \"@material-ui/core/MenuItem\";\n\nexport default MenuItem;\n","import Toolbar from \"@material-ui/core/Toolbar\";\n\nexport default Toolbar;\n","import axios from \"axios\";\nimport intl from \"react-intl-universal\";\n\nexport const SUPPORTED_LOCALES = { en: \"en\", ru: \"ru\" };\n\nexport default () => {\n  let currentLocale = intl.determineLocale({\n    cookieLocaleKey: \"lang\"\n  });\n  if (!SUPPORTED_LOCALES[currentLocale]) {\n    currentLocale = \"en\";\n  }\n\n  return axios\n    .get(`${process.env.PUBLIC_URL}/locales/${currentLocale}.json`)\n    .then(res => {\n      return intl.init({\n        currentLocale,\n        locales: {\n          [currentLocale]: res.data\n        }\n      });\n    });\n};\n","import Select from \"@material-ui/core/Select\";\n\nexport default Select;\n","import styled from \"styled-components\";\nimport Button from \"../libs/territories-ui/Button\";\nimport Select from \"../libs/territories-ui/Select\";\n\nexport const Logo = styled.span`\n  flex-grow: 1;\n  text-transform: uppercase;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nexport const WhiteSelect = styled(Select)`\n  && {\n    color: ${props => props.theme.colors.white};\n  }\n`;\n\nexport const DetachedButton = styled(Button)`\n  && {\n    margin-left: 8px;\n    margin-right: 8px;\n  }\n`;\n\nexport const FixedAppBarMargin = styled.div`\n  /* Top margin from fixed app bar */\n  margin-top: 80px;\n`;\n","import React, { Component } from \"react\";\nimport Cookies from \"js-cookie\";\nimport intl from \"react-intl-universal\";\n\nimport AppBar from \"../libs/territories-ui/AppBar\";\nimport GithubIcon from \"../libs/territories-icons/Github\";\nimport IconButton from \"../libs/territories-ui/IconButton\";\nimport MenuItem from \"../libs/territories-ui/MenuItem\";\nimport Toolbar from \"../libs/territories-ui/Toolbar\";\nimport Tooltip from \"../libs/territories-ui/Tooltip\";\nimport { SUPPORTED_LOCALES } from \"../initLocale\";\nimport {\n  DetachedButton,\n  FixedAppBarMargin,\n  Logo,\n  WhiteSelect\n} from \"./elements\";\n\nexport default class AppWrapper extends Component {\n  handleLogoClick = () => {\n    window.open(`${process.env.PUBLIC_URL}/`, \"_self\");\n  };\n\n  handleGithubClick = () => {\n    window.open(\"https://github.com/lehaSVV2009/territories\");\n  };\n\n  handleRulesClick = () => {\n    window.open(\n      \"https://pikabu.ru/story/prikolnaya_miniigra_stoit_poprobovat_6269129\"\n    );\n  };\n\n  handleLanguageChange = ({ target: { value } }) => {\n    Cookies.set(\"lang\", value);\n    window.location.reload();\n  };\n\n  render() {\n    const { currentLocale } = intl.getInitOptions();\n\n    return (\n      <div>\n        <AppBar color=\"secondary\" position=\"fixed\">\n          <Toolbar>\n            <Logo onClick={this.handleLogoClick}>\n              {intl.get(\"app_bar.title\")}\n            </Logo>\n            <WhiteSelect\n              value={currentLocale}\n              onChange={this.handleLanguageChange}\n            >\n              {Object.keys(SUPPORTED_LOCALES).map(lang => (\n                <MenuItem key={lang} value={lang}>\n                  {lang}\n                </MenuItem>\n              ))}\n            </WhiteSelect>\n            <DetachedButton color=\"inherit\" onClick={this.handleRulesClick}>\n              {intl.get(\"app_bar.rules\")}\n            </DetachedButton>\n            <Tooltip title=\"Github\">\n              <IconButton onClick={this.handleGithubClick}>\n                <GithubIcon />\n              </IconButton>\n            </Tooltip>\n          </Toolbar>\n        </AppBar>\n        <FixedAppBarMargin>{this.props.children}</FixedAppBarMargin>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport ErrorPage from \"./Error\";\nimport Loadable from \"react-loadable\";\nimport LinearProgress from \"./libs/territories-ui/LinearProgress\";\n\nconst Loading = props =>\n  props.error ? <ErrorPage /> : <LinearProgress color=\"secondary\" />;\n\nconst LoadableHomePage = Loadable({\n  loader: () => import(\"./HomePage\"),\n  loading: Loading\n});\n\nconst LoadableAiPage = Loadable({\n  loader: () => import(\"./AiPage\"),\n  loading: Loading\n});\n\nconst LoadableTwoPlayersPage = Loadable({\n  loader: () => import(\"./TwoPlayersPage\"),\n  loading: Loading\n});\n\nconst LoadableOnlinePage = Loadable({\n  loader: () => import(\"./OnlineLobbyPage\"),\n  loading: Loading\n});\n\n// TODO add react-loadable\nconst Routes = () => (\n  // Hash router is used because of github-pages issues with browser router\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={LoadableHomePage} />\n      <Route path=\"/ai\" component={LoadableAiPage} />\n      <Route path=\"/two-players\" component={LoadableTwoPlayersPage} />\n      <Route path=\"/online\" component={LoadableOnlinePage} />\n      <Route path=\"*\" component={ErrorPage} />\n    </Switch>\n  </Router>\n);\n\nexport default Routes;\n","import React, { Fragment } from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport AppWraper from \"./AppWrapper\";\nimport initLocale from \"./initLocale\";\nimport LinearProgress from \"./libs/territories-ui/LinearProgress\";\nimport Routes from \"./Routes\";\n\n// TODO replace styled-components theme with mui theme\nconst theme = {\n  colors: {\n    white: \"#FFFFFF\",\n    yellow: \"#FFFF00\",\n    gray: \"#DDDDDD\",\n    green: \"#00FF00\",\n    red: \"#FF0000\",\n    player1: \"#375E97\",\n    player2: \"#FB6542\"\n  }\n};\n\nconst muiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: theme.colors.player1,\n      contrastText: theme.colors.white\n    },\n    secondary: {\n      main: theme.colors.player2,\n      contrastText: theme.colors.white\n    }\n  }\n});\n\nclass App extends React.Component {\n  state = {\n    loadingLocales: true\n  };\n\n  componentDidMount() {\n    initLocale().then(() => this.setState({ loadingLocales: false }));\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={muiTheme}>\n        <ThemeProvider theme={theme}>\n          <Fragment>\n            {this.state.loadingLocales ? (\n              <LinearProgress color=\"secondary\" />\n            ) : (\n              <AppWraper>\n                <Routes />\n              </AppWraper>\n            )}\n          </Fragment>\n        </ThemeProvider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import LinearProgress from \"@material-ui/core/LinearProgress\";\n\nexport default LinearProgress;\n","import styled from \"styled-components\";\n\nexport const Face = styled.div`\n  width: 300px;\n  height: 300px;\n  border: 4px solid black;\n  border-radius: 10px;\n  background-color: white;\n  margin: 0 auto;\n  margin-top: 100px;\n\n  @media screen and (max-width: $sm) {\n    margin-top: 40px;\n    transform: scale(0.8);\n  }\n`;\n\nexport const Band = styled.div`\n  width: 350px;\n  height: 27px;\n  border: 4px solid black;\n  border-radius: 5px;\n  margin-left: -29px;\n  margin-top: 50px;\n`;\n\nexport const White = styled.div`\n  height: calc(100% / 2);\n  width: 100%;\n  background-color: white;\n`;\n\nexport const Red = styled.div`\n  height: calc(100% / 2);\n  width: 100%;\n  background-color: red;\n`;\n\nexport const Eyes = styled.div`\n  width: 128px;\n  margin: 0 auto;\n  padding-left: 10px;\n  margin-top: 40px;\n  &:before {\n    content: \"\";\n    display: inline-block;\n    width: 30px;\n    height: 15px;\n    border: 7px solid black;\n    margin-right: 20px;\n    border-top-left-radius: 22px;\n    border-top-right-radius: 22px;\n    border-bottom: 0;\n  }\n\n  &:after {\n    content: \"\";\n    display: inline-block;\n    width: 30px;\n    height: 15px;\n    border: 7px solid black;\n    margin-left: 20px;\n    border-top-left-radius: 22px;\n    border-top-right-radius: 22px;\n    border-bottom: 0;\n  }\n`;\n\nexport const Dimples = styled.div`\n  width: 180px;\n  margin: 0 auto;\n  margin-top: 15px;\n\n  &:before {\n    content: \"\";\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    margin-right: 80px;\n    border-radius: 50%;\n    background-color: rgba(red, 0.4);\n  }\n\n  &:after {\n    content: \"\";\n    display: inline-block;\n    width: 10px;\n    height: 10px;\n    margin-left: 80px;\n    border-radius: 50%;\n    background-color: rgba(red, 0.4);\n  }\n`;\n\nexport const Mouth = styled.div`\n  width: 40px;\n  height: 5px;\n  border-radius: 5px;\n  background-color: black;\n  margin: 0 auto;\n  margin-top: 25px;\n`;\n\nexport const ErrorTitle = styled.h1`\n  font-weight: 800;\n  color: black;\n  text-align: center;\n  font-size: 2.5em;\n  padding-top: 20px;\n\n  @media screen and (max-width: 600px) {\n    padding-left: 20px;\n    padding-right: 20px;\n    font-size: 2em;\n  }\n`;\n\nexport const ErrorDescription = styled.div`\n  text-align: center;\n  color: red;\n  padding: 10px;\n`;\n","import React from \"react\";\nimport intl from \"react-intl-universal\";\n\nimport Fab from \"../libs/territories-ui/Fab\";\nimport { Container } from \"../libs/territories-ui/Grid\";\nimport {\n  Face,\n  Band,\n  White,\n  Red,\n  Eyes,\n  Dimples,\n  Mouth,\n  ErrorTitle,\n  ErrorDescription\n} from \"./elements\";\n\nconst handleGoHome = () => window.open(`${process.env.PUBLIC_URL}/`, \"_self\");\n\nconst Error = ({ children }) => (\n  <div>\n    <Face>\n      <Band>\n        <White />\n        <Red />\n      </Band>\n      <Eyes />\n      <Dimples />\n      <Mouth />\n    </Face>\n    <ErrorTitle>{intl.get(\"error.oops\")}</ErrorTitle>\n    <ErrorDescription>{children}</ErrorDescription>\n    <Container center>\n      <Fab variant=\"extended\" color=\"primary\" onClick={handleGoHome}>\n        {intl.get(\"error.go_home\")}\n      </Fab>\n    </Container>\n  </div>\n);\n\nexport default Error;\n","import styled, { css } from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: ${props =>\n    props.left\n      ? \"flex-start\"\n      : props.right\n      ? \"flex-end\"\n      : props.center\n      ? \"center\"\n      : props.spaceBetween\n      ? \"space-between\"\n      : props.spaceAround\n      ? \"space-around\"\n      : \"none\"};\n  flex-direction: ${props => (props.column ? \"column\" : \"row\")};\n  ${props =>\n    props.alignItems &&\n    css`\n      align-items: ${props.alignItems};\n    `};\n`;\n\nexport const Item = styled.div`\n  flex: ${props => props.flex || \"none\"};\n  ${props =>\n    props.center &&\n    css`\n      margin: 0 auto;\n    `};\n`;\n","import IconButton from \"@material-ui/core/IconButton\";\n\nexport default IconButton;\n","import Tooltip from \"@material-ui/core/Tooltip\";\n\nexport default Tooltip;\n","import Button from \"@material-ui/core/Button\";\n\nexport default Button;\n","import SvgIcon from \"@material-ui/core/SvgIcon\";\n\nexport default SvgIcon;\n"],"sourceRoot":""}